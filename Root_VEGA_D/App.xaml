<Application x:Class="Root_VEGA_D.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Root_VEGA_D"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Color-->
        <SolidColorBrush x:Key="PanelBackGround"
                         Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" />
        <SolidColorBrush x:Key="ControlBackGround" 
                         Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
        <SolidColorBrush x:Key="GroupBoxBackground"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Splitter"
                         Color="DimGray" />
        <SolidColorBrush x:Key="MainThema"
                         Color="#FF2D2D50" />
        <!--Title Bar-->
        <Style TargetType="{x:Type Button}"
               x:Key="SystemButton">
            <Setter Property="Width"
                    Value="34" />
            <Setter Property="Height"
                    Value="26" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                    Value="True" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Focusable"
                    Value="False" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource ActiveBackgroundBrushKey}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource ActiveBorderBrushKey}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource ActiveForegroundBrushKey}" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource AccentBrushKey}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource ActiveBorderBrushKey}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource AccentForegroundBrushKey}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            Value="0.6" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="sidetap_parent_background" Color="#080820"></SolidColorBrush>
        <SolidColorBrush x:Key="sidetap_parent_menu_normal" Color="{x:Static SystemColors.ControlColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="sidetap_parent_menu_mouseover" Color="#aaaaaa"></SolidColorBrush>
        <SolidColorBrush x:Key="sidetap_parent_menu_text" Color="Black"></SolidColorBrush>
        <SolidColorBrush x:Key="sidetap_child_background" Color="#666666"></SolidColorBrush>
        
        <Style x:Key="TabRadio" TargetType="{x:Type RadioButton}" >
            <Setter Property="OverridesDefaultStyle" Value="False"/>
            <Setter Property="Background" Value="{StaticResource sidetap_parent_menu_normal}"/>
            <Setter Property="Foreground" Value="{StaticResource sidetap_parent_menu_text}"/>
            <Setter Property="Margin" Value="4,0,0,4"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border BorderThickness="0" 
                                CornerRadius="4, 0, 0, 4"
                                Padding="4"
                                Width="125"
                                Height="40"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource sidetap_parent_menu_text}">
                            <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource sidetap_child_background}"/>
                            </Trigger>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource sidetap_parent_menu_mouseover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomRadio" TargetType="{x:Type RadioButton}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <!--<ToggleButton Margin="3" Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
                              IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>-->
                        <Grid>
                            <Border x:Name="radioBorder" CornerRadius="4" BorderBrush="Black" Margin="3">
                                <Border.Effect>
                                    <DropShadowEffect 
                                  ShadowDepth="2"
                                  Color="Black"
                                  Opacity="0.5"/>
                                </Border.Effect>
                                <Border.Background>
                                    <SolidColorBrush Color="GhostWhite"/>
                                </Border.Background>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="radioBorder" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#aa86ff75"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="radioBorder" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#86ff75"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="radioBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect 
                                  ShadowDepth="0"
                                  Color="Black"
                                  Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="radioBorder" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#efefef"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="#333333"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="radioBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect 
                                  ShadowDepth="0"
                                  Color="Black"
                                  Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="radioBorder" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="LightGray"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="SetupPanelBtn">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <!--<Setter Property="BorderBrush" Value="{x:Null}"/>-->
            <Setter Property="Background" Value="{StaticResource ControlBackGround}"/>
        </Style>
        
        <Style x:Key="ChromeIconBaseKey"
               TargetType="{x:Type Path}">
            <Setter Property="Width"
                    Value="12" />
            <Setter Property="Fill"
                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Foreground}" />
            <Setter Property="Stretch"
                    Value="Uniform" />
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
        </Style>
        <Style x:Key="MinimizeIconKey"
               TargetType="{x:Type Path}"
               BasedOn="{StaticResource ChromeIconBaseKey}">
            <Setter Property="Width"
                    Value="10" />
            <Setter Property="Height"
                    Value="9" />
            <Setter Property="Data"
                    Value="M5,30 L25,30 L25,35 L5,35 z" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>
        <Style x:Key="MaximizeIconKey"
               TargetType="{x:Type Path}"
               BasedOn="{StaticResource ChromeIconBaseKey}">
            <Setter Property="Width"
                    Value="11" />
            <Setter Property="Height"
                    Value="11" />
            <Setter Property="Data"
                    Value="M5,12.5 L5,32.5 L30.078125,32.5 L30.078125,12.5 z M2.5,7.5 L32.578125,7.5 L32.578125,35 L2.5,35 z" />
        </Style>
        <Style x:Key="NormalizeIconKey"
               TargetType="{x:Type Path}"
               BasedOn="{StaticResource ChromeIconBaseKey}">
            <Setter Property="Data"
                    Value="M5,22.5 L5,32.5 L22.5,32.5 L22.5,22.5 z M12.5,12.5 L12.5,17.5 L25,17.5 L25,22.5 L30,22.5 L30,12.5 z M10,7.5 L32.5,7.5 L32.5,25 L25,25 L25,35 L2.5,35 L2.5,17.5 L10,17.5 z" />
        </Style>
        <Style x:Key="CloseIconKey"
               TargetType="{x:Type Path}"
               BasedOn="{StaticResource ChromeIconBaseKey}">
            <Setter Property="Width"
                    Value="10" />
            <Setter Property="Height"
                    Value="10" />
            <Setter Property="Data"
                    Value="M48.578243,0 L57.856652,0 71.665367,15.433628 85.779,0 94.404,0 75.760063,19.752212 94.404,39.999999 85.125595,39.999999 71.229759,24.460176 56.98544,39.999999 48.404,39.999999 67.135063,20.141593 z" />
        </Style>
        <!--GroupBox-->
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true"
                              Margin="2,-3,2,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="0"
                                    Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="Transparent"
                                    Background="{TemplateBinding Background}" />
                            <Border Name="Header"
                                    Padding="3,0,3,0"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="1">
                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="true"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  TextElement.FontSize="12"
                                                  TextElement.FontWeight="Bold" />

                            </Border>
                            <ContentPresenter Grid.Row="2"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Grid.ColumnSpan="4"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="0">
                                <Border.OpacityMask>
                                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                                  ConverterParameter="7">
                                        <Binding ElementName="Header"
                                                 Path="ActualWidth" />
                                        <Binding Path="ActualWidth"
                                                 RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="ActualHeight"
                                                 RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Border.OpacityMask>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TabControl-->
        <Style TargetType="{x:Type TabControl}"
               x:Key="WizardTabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel IsItemsHost="True"
                                        Panel.ZIndex="2" />
                            <Border Grid.Column="1"
                                    BorderBrush="#FFACACAC"
                                    BorderThickness="1"
                                    Margin="0,0,0,0">
                                <ContentPresenter ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TabItem-->
        <Style TargetType="{x:Type TabItem}"
               x:Key="WizardTabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Panel"
                                Width="120"
                                Height="30"
                                HorizontalAlignment="Right"
                                SnapsToDevicePixels="True"
                                BorderBrush="#FFACACAC"
                                BorderThickness="1,1,0,1">
                            <TextBlock VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="Arial"
                                       FontSize="12">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header" />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="False">
                                <Setter TargetName="Panel"
                                        Property="Background"
                                        Value="{StaticResource ResourceKey=ControlBackGround}" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="Panel"
                                        Property="Margin"
                                        Value="0,0,-1,0" />
                                <Setter TargetName="Panel"
                                        Property="Width"
                                        Value="125" />
                                <Setter TargetName="Panel"
                                        Property="Height"
                                        Value="35" />
                                <Setter TargetName="Panel"
                                        Property="Background"
                                        Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Panel"
                                        Property="Background"
                                        Value="#EAF3FC" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
