<Window x:Class="Root_VEGA_D.ManualJobSchedule_UI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Root_VEGA_D"
        mc:Ignorable="d"
        WindowStyle="ToolWindow"
        Closing="Window_Closing"
                ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Title="ManualJobSchedule" Height="740" Width="930.5" Background="#FF406859" Topmost="True">
    <Window.Resources>
        <local:BooltoVisibleConverter x:Key="BooltoVisibleConverters"/>
        <LinearGradientBrush x:Key="BtnGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF3E3E40" Offset="0"/>
            <GradientStop Color="#FF3E3E40" Offset="0.5"/>
            <GradientStop Color="#FF3E3E40" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="DarkSlateGray"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="DarkSlateGray">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BtnGradientBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="SlateGray"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BtnGradientBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="25" Height="25" CornerRadius="0" Background="White" BorderThickness="1" BorderBrush="#404040">
                                    <Path Width="14" Height="14" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="#404040" StrokeThickness="3" Data="M 0 0 L 7 14 M 7 14 L 14 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="SwitchTypeToggleButton" TargetType="{x:Type ToggleButton}">-->
        <Style TargetType="{x:Type ToggleButton}">
            <Style.Resources>
                <Color x:Key="Color.Additional.LightGray">#989EA8</Color>
                <Color x:Key="Color.Additional.MediumGray">#61656B</Color>
                <Color x:Key="Color.MedtronicBranding.MediumPurple">#FF9370DB</Color>
                <Color x:Key="Color.MedtronicBranding.MediumSeeGreen">#FF3CB371</Color>
                <Style x:Key="ToggleButtonContentTextbox" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                </Style>
                <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                          Color="{StaticResource Color.Additional.LightGray}" />
                <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.MediumSeeGreen}" />
                <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGray}" />
                <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MediumPurple}" />
                <TextBlock x:Key="OffContent"
                   Style="{StaticResource ToggleButtonContentTextbox}"
                   Text="Off" />
            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="MainRow">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="BackgroundEllipse1"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource ToggleButtonTrueBackground}" />
                                <Ellipse x:Name="BackgroundEllipse2"
                                 Grid.Row="0"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource ToggleButtonFalseBackground}" />
                                <Border x:Name="BackgroundBorder"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource ToggleButtonTrueBackground}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="AnimationWidth" />
                                    <ColumnDefinition Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="AnimationSizeBorder" Grid.Column="0" />
                                <!--<ContentControl Grid.Column="0" Style="{StaticResource OnContentControl}" />-->
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <!--<ContentControl Grid.Column="1" Style="{StaticResource OffContentControl}" />-->
                            </Grid>
                            <Grid Background="Transparent">
                                <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                    <Border Width="{Binding ElementName=AnimationSizeBorder, Path=ActualWidth}" />
                                    <Ellipse x:Name="ForegroundEllipse"
                                     Width="{Binding ElementName=MainRow, Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow, Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonTrueForeground}" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background"
                Value="{StaticResource ToggleButtonFalseBackground}" />
                                <Setter TargetName="ForegroundEllipse" Property="Fill"
                Value="{StaticResource ToggleButtonFalseForeground}" />
                                <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="DarkSlateGray">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="347*"/>
            <ColumnDefinition Width="114*"/>
        </Grid.ColumnDefinitions>
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="Transparent"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding p_ManualJobBlick}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Name="sbBlink">
                                <Storyboard RepeatBehavior="Forever">
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                    AutoReverse="True"
                                                    From="Transparent" To="#FF406859" FillBehavior="Stop"
                                                    BeginTime="0:0:0" Duration="0:0:2"/>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                    From="#FF406859" To="Transparent"
                                                    BeginTime="0:0:2" Duration="0:0:2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="sbBlink"/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="0.3*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.ColumnSpan="2">
            <GroupBox FontSize="20" Header="Information" Foreground="White" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0"
                               Text="Location ID"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="30"
                               FontWeight="Bold"/>
                    <!--<TextBox Grid.Row="1" Grid.Column="0"
                             TextAlignment="Center"
                             VerticalContentAlignment="Center"
                             FontSize="30"
                             x:Name="textboxLocID"
                             Margin="15,0,15,25"/>-->
                    <Label Grid.Row="1" Grid.Column="0" Margin="0,-30,0,0"
                           x:Name="textboxLocID"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontSize="30"/>
                    <TextBlock Grid.Row="0" Grid.Column="1"
                               Text="Lot ID"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="30"
                               FontWeight="Bold"/>
                    <TextBox Grid.Row="1" Grid.Column="1"
                             TextAlignment="Center"
                             Text="{Binding p_sLotID}"
                             VerticalContentAlignment="Center"
                             FontSize="30"
                             x:Name="textboxLotID"
                             Margin="15,0,15,25"/>

                    <TextBlock Grid.Row="0" Grid.Column="2"
                               Text="Carrier ID"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="30"
                               FontWeight="Bold"/>
                    <TextBox Grid.Row="1" Grid.Column="2"
                             Text="{Binding p_sCarrierID}"
                             TextAlignment="Center"
                             VerticalContentAlignment="Center"
                             FontSize="30"
                             x:Name="textboxCstID"
                             Margin="15,0,15,25"/>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <GroupBox FontSize="20" Header="Recipe Select" Foreground="White" Margin="5" Visibility="Collapsed">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Recipe ID = "
                               VerticalAlignment="Center"
                               FontSize="30"
                               FontWeight="Bold"
                               Margin="15"/>
                    <ComboBox x:Name="comboRecipeID" MinWidth="300"
                              VerticalAlignment="Center"
                              FontSize="30"
                              SelectionChanged="comboRecipeID_SelectionChanged"/>
                </StackPanel>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <GroupBox FontSize="20" Header="Option" Foreground="White" Margin="5">
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="checkRnR"
                                  Margin="10"
                                  Width="160"
                                  IsChecked="{Binding p_bRNR}"
                                  Checked="checkRnR_Checked"
                                  Unchecked="checkRnR_Unchecked"/>
                    <TextBlock Text="RNR Mode"
                               VerticalAlignment="Center"
                               Margin="15"
                               FontSize="30"/>

                    <TextBlock Text="RNR Count : "
                               x:Name="textblockRnR"
                               FontSize="30"
                               Margin="100,15,0,15"
                               VerticalAlignment="Center"/>
                    <TextBox TextAlignment="Center"
                             Width="150"
                             x:Name="textboxRnR"
                             Margin="0,15,15,15"
                             FontSize="30"
                             VerticalContentAlignment="Center"
                             IsEnabled="{Binding ElementName=RNRMode, Path=IsChecked}"
                             Text = "{Binding p_nRnR}"/>
                </StackPanel>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--<Button Grid.Column="0" Style="{StaticResource ButtonStyle1}"
                    Content="Run"
                    x:Name="btnRun"
                    Visibility="{Binding p_diOpen}"
                    IsDefault="True"
                    Margin="20"
                    Click="Button_Click"/>
            <Button Grid.Column="1" Style="{StaticResource ButtonStyle1}"
                    Content="Cancel"
                    IsCancel="True"
                    Margin="20"
                    Click="Button_Click_1"/>-->
            <Button Grid.Column="0" Style="{StaticResource ButtonStyle1}"
                    Content="Run"
                    Margin="20"
                    x:Name="btnRun"
                    IsDefault="True"
                    Visibility="{Binding p_open, Converter={StaticResource BooltoVisibleConverters}}"
                    Click="Button_Click"/>
            <Button Grid.Column="1" Style="{StaticResource ButtonStyle1}"
                    Content="Cancel"
                    Margin="20"
                    IsCancel="True"
                    Click="Button_Click_1"/>
        </Grid>
    </Grid>
</Window>
