<UserControl x:Class="Root_CAMELLIA.UI_UserControl.Loadport_UI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Root_CAMELLIA"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ctrl="clr-namespace:RootTools.Control;assembly=RootTools"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="700">
    <UserControl.Resources>
        <local:EnumToStringConverter x:Key="EnumConverter"/>
        <local:BoolToDIBrushConverter x:Key="DIBrushConverter"/>
        <local:ValueToDataGridColorConverter x:Key="DataGridColorConverter"/>
        <Style x:Key="CustomColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="CustomCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Height" Value="20"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Border>
            <Border BorderThickness="1" BorderBrush="White" Margin="3" CornerRadius="5">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2" Opacity="0.5"/>
                </Border.Effect>
            </Border>
        </Border>
        <GroupBox Header="{Binding p_loadport.p_id}" Background="White" Margin="5" BorderThickness="0">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <Border CornerRadius="2" Background="White" Width="70" Height="auto">
                        </Border>
                        <TextBlock Text="{Binding}" FontWeight="Bold" TextAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <!--<GroupBox.Effect>
                <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.5"/>
            </GroupBox.Effect>-->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="0.1*"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Slot" BorderThickness="0">
                        <DataGrid ItemsSource="{Binding p_waferList, UpdateSourceTrigger=PropertyChanged}" Background="White" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="True" EnableColumnVirtualization="True"  CanUserDeleteRows="False" HorizontalScrollBarVisibility="Hidden"
                             ScrollViewer.CanContentScroll="True" SelectionMode="Single" IsReadOnly="True" IsHitTestVisible="True" VirtualizingPanel.IsVirtualizing ="False"  local:CustomDataGrid.SelectingItem="{Binding p_dataSelectIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  PreviewMouseDown="DataGrid_PreviewMouseDown" GridLinesVisibility="None" PreviewMouseRightButtonDown="DataGrid_PreviewMouseDown" PreviewMouseRightButtonUp="DataGrid_PreviewMouseDown">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding p_state}" Value="Select">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="brinkingRow">
                                                    <Storyboard>
                                                        <ColorAnimation 
                                        Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" To="#FFFFcc" Duration="0:0:1" 
                                        RepeatBehavior="Forever" AutoReverse="true"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="brinkingRow">
                                                </StopStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding p_state}" Value="Run">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="brinkingRowRun">
                                                    <Storyboard>
                                                        <ColorAnimation 
                                        Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)" To="#86ff75" Duration="0:0:1" 
                                        RepeatBehavior="Forever" AutoReverse="true"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="brinkingRowRun">
                                                </StopStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="No" Binding="{Binding p_Index}" Width="1*"  HeaderStyle="{StaticResource CustomColumnHeader}" CellStyle="{StaticResource CustomCellStyle}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Background" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}, ConverterParameter=Background}"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="Foreground" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}}"/>
                                            <!--<Setter Property="Foreground" Value="Red"/>-->
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>

                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Wafer ID" Binding="{Binding p_waferId}" Width="2*" HeaderStyle="{StaticResource CustomColumnHeader}" CellStyle="{StaticResource CustomCellStyle}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Background" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}, ConverterParameter=Background}"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="Foreground" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Recipe ID" Binding="{Binding p_recipeID}" Width="4*" HeaderStyle="{StaticResource CustomColumnHeader}" CellStyle="{StaticResource CustomCellStyle}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Background" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}, ConverterParameter=Background}"/>
                                            <Setter Property="ToolTip" Value="{Binding p_recipeID}"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="Foreground" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="State" Binding="{Binding p_state, UpdateSourceTrigger=PropertyChanged}" Width="2*" HeaderStyle="{StaticResource CustomColumnHeader}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="BorderBrush" Value="Black"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Background" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter},ConverterParameter=Background}"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                                            <Setter Property="Foreground" Value="{Binding p_state, Converter={StaticResource DataGridColorConverter}}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:CallMethodAction MethodName="OnSelectedCellChanged"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </GroupBox>
                    <Grid Grid.Row="2" Margin="5,0,5,3">
                        <ProgressBar Style="{StaticResource CustomProgress}" Value="{Binding p_progressValue, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="{Binding p_progressValue, StringFormat={}{0:0.#}％}" VerticalAlignment="Center" Margin="10,0"/>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0" FontWeight="Bold" FontSize="15" Foreground="DarkBlue">
                            <Run Text="RNR "/>
                            <Run Text="{Binding p_currentRNR, UpdateSourceTrigger=PropertyChanged}"/>
                            <Run Text=" / "/>
                            <Run Text="{Binding p_totalRNR}"/>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding p_isRNR}" Value="true">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock VerticalAlignment="Center" Margin="10,0" HorizontalAlignment="Right">
                            <Run Text="{Binding p_totalDone}"/>
                            <Run Text=" / "/>
                            <Run Text="{Binding p_totalSelect}"/>
                        </TextBlock>
                    </Grid>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="0.8*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0" Header="Information" BorderThickness="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Carrier ID"  VerticalAlignment="Center" Margin="10,0"/>
                            <Border  Grid.Row="0" Grid.Column="1" Background="#eeeeee" BorderThickness="1,1,1,0" CornerRadius="5" Margin="1">
                                <TextBlock Text="{Binding p_loadport.p_infoCarrier.p_sCarrierID}" VerticalAlignment="Center" TextAlignment="Center"/>
                            </Border>
                            <TextBlock  Grid.Row="1" Grid.Column="0" Text="Lot ID" VerticalAlignment="Center" Margin="10,0"/>
                            <Border Grid.Row="1" Grid.Column="1" Background="#eeeeee" BorderThickness="1,1,1,0" CornerRadius="5" Margin="1">
                                <TextBlock Text="{Binding p_CurrentLotID, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" TextAlignment="Center"/>
                            </Border>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Recipe ID" VerticalAlignment="Center" Margin="10,0"/>
                            <Border Grid.Row="2" Grid.Column="1" Background="#eeeeee" BorderThickness="1,1,1,0" CornerRadius="5" Margin="1">
                                <TextBlock Text="{Binding p_CurrentRecipeID, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" TextAlignment="Center"/>
                            </Border>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Loadport State" VerticalAlignment="Center" Margin="10,0"/>
                            <Border Grid.Row="3" Grid.Column="1" Background="#eeeeee" BorderThickness="1" CornerRadius="5" Margin="1">
                                <TextBlock Text="{Binding p_loadport.p_infoCarrier.p_eState, Converter={StaticResource EnumConverter}}" VerticalAlignment="Center" TextAlignment="Center"/>
                            </Border>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Header="State" BorderThickness="0">
                        <Border BorderBrush="Gray" BorderThickness="1">
                            <UniformGrid Columns="4" Rows="2">
                                <Border CornerRadius="10"  Margin="1">
                                    <TextBlock Text="Manual" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding p_loadport.p_infoCarrier.p_eAccessLP, UpdateSourceTrigger=PropertyChanged}" Value="Auto">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding p_loadport.p_infoCarrier.p_eAccessLP, UpdateSourceTrigger=PropertyChanged}" Value="Manual">
                                                    <Setter Property="Background" Value="#86ff11"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border CornerRadius="10" Margin="1">
                                    <TextBlock Text="Auto" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding p_loadport.p_infoCarrier.p_eAccessLP, UpdateSourceTrigger=PropertyChanged}" Value="Auto">
                                                    <Setter Property="Background" Value="#86ff11"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding p_loadport.p_infoCarrier.p_eAccessLP, UpdateSourceTrigger=PropertyChanged}" Value="Manual">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border CornerRadius="10"  Margin="1">
                                    <TextBlock Text="Placed" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding p_loadport.p_diPlaced.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding  p_loadport.p_diPlaced.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border CornerRadius="10"  Margin="1">
                                    <TextBlock Text="Present" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding p_loadport.p_diPresent.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding  p_loadport.p_diPresent.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border CornerRadius="10"  Margin="1">
                                    <TextBlock Text="Load" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding p_loadport.p_diLoad.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding  p_loadport.p_diLoad.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border CornerRadius="10"  Margin="1">
                                    <TextBlock Text="Unload" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding p_loadport.p_diUnload.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding  p_loadport.p_diUnload.m_bitDI.p_bOn, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border CornerRadius="10"  Margin="1">
                                    <TextBlock Text="Reserve" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                                <Border CornerRadius="10"  Background="Transparent"  Margin="1">
                                    <TextBlock Text="Alarm" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </UniformGrid>
                        </Border>
                    </GroupBox>
                    <Grid Grid.Row="2" Margin="5,0,5,3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.2*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Margin="5" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Loadport State : " TextAlignment="Center"/>
                                <TextBlock Text="{Binding p_loadport.p_infoCarrier.p_eTransfer, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="3">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Button Content="Manual" Style="{StaticResource customButton}" Command="{Binding CmdOHTManual}" FontSize="15" Margin="3" FontWeight="Bold"/>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Button Content="Auto" Style="{StaticResource customButton}" Command="{Binding CmdOHTAuto}" FontSize="15" Margin="3" FontWeight="Bold"/>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Button Content="In Service" Style="{StaticResource customButton}"  FontSize="15"  Margin="3" FontWeight="Bold" Command="{Binding CmdInService}"/>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Button Content="Out Of Service" Style="{StaticResource customButton}"   FontSize="15"  Margin="3" FontWeight="Bold" Command="{Binding CmdOutOfService}"/>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Button x:Name="buttonLoad" Content="Load" 
                                    Style="{StaticResource customLoadButton}" IsEnabled="{Binding p_isEnableLoad, UpdateSourceTrigger=PropertyChanged}"
                                    Margin="3"  FontSize="15" FontWeight="Bold" Command="{Binding CmdLoadClick}"/>
                        </Grid>
                        <Button x:Name="buttonUnloadReq" 
                                Content="Unload Request" IsEnabled="{Binding p_isEnableUnload, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource customButton}" FontSize="15" 
                                Margin="2" Grid.Row="4" FontWeight="Bold" Command="{Binding CmdUnloadClick}"/>
                    </Grid>
                </Grid>
            </Grid>
        </GroupBox>
        
    </Grid>
</UserControl>
