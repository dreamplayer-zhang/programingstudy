<Window x:Class="Root_CAMELLIA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Root_CAMELLIA"
        xmlns:lp="clr-namespace:Root_CAMELLIA.UI_UserControl"
        xmlns:Icon ="clr-namespace:Root_CAMELLIA.Control.Icon"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:met="clr-namespace:Root_CAMELLIA.LibSR_Met"
        xmlns:tools="clr-namespace:RootTools;assembly=RootTools"
        xmlns:gem="clr-namespace:RootTools.Gem.XGem;assembly=RootTools"
        xmlns:arrow="clr-namespace:Petzold.Media2D"
        xmlns:ctrl="clr-namespace:Root_CAMELLIA.Control"
        xmlns:stage="clr-namespace:Camellia2Stage"
        xmlns:PackIcon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:TemplateSelector="clr-namespace:Root_CAMELLIA.TemplateSelector"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"
        Height="1020"  MinHeight="920" MinWidth="1820"
        Width="1920"
        Title="CAMELLIA2"
        Loaded="Window_Loaded" Icon="CamelIcon.ico"
        Background="White">
    <Window.Resources>
        <local:AxisToPositionConverter x:Key="AxisToPositionConverter"/>
        <local:AxisToStageUIConverter x:Key="AxisToStageConverter"/>
        <local:MeasurePointToStageUIConverter x:Key="PointToStageConverter"/>
        <local:DoubleToProgressConverter x:Key="ProgressConverter"/>
        <local:OpticLampStateColorConverter x:Key="OpticLampStateColorConverter"/>
        <local:BoolToLoginStateConverter x:Key="LoginStateConverter"/>
        <local:BoolToBrushConverter x:Key="LoginStateBrushConverter"/>
        <local:OpticLampStatusEnumToStringConverter x:Key="OpticLampStatusEnumConverter"/>
        <local:OpticLampTimeToStringConverter x:Key="OpticLampTimeToStringConverter"/>
        <local:EnumToStringConverter x:Key="EnumConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--Title Bar-->
        <Grid Grid.Row="0"
              Name="TitleBar"
              Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
              MouseLeftButtonDown="TitleBar_MouseLeftButtonDown" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Icon:AtiLogo Width="30"
                          Height="21"
                          VerticalAlignment="Center"
                          Margin="2"/>
            <TextBlock Grid.Column="1" Text="{Binding Path=Version, Source={x:Static local:BaseDefine.Configuration}}"  FontSize="11" Foreground="Black" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <TextBlock Text="{Binding p_LoadRecipe, UpdateSourceTrigger=PropertyChanged}"
                       FontSize="12"
                       FontWeight="Bold"
                       Foreground="Black"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Grid.Column="1" />
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="True"
                        Orientation="Horizontal"
                        Grid.Column="2">
                <Button Style="{StaticResource SystemButton}"
                        x:Name="MinimizeButton"
                        Width="30"
                        Height="25"
                        Margin="2,0"
                        Click="MinimizeButton_Click">
                    <Path Style="{StaticResource MinimizeIconKey}" />
                </Button>
                <Button Style="{StaticResource SystemButton}"
                        x:Name="MaximizeButton"
                        Width="30"
                        Height="25"
                        Margin="2,0"
                        Click="MaximizeButton_Click">
                    <Path Style="{StaticResource MaximizeIconKey}" />
                </Button>
                <Button Style="{StaticResource SystemButton}"
                        x:Name="NormalizeButton"
                        Width="30"
                        Height="25"
                        Margin="2,0"
                        Click="NormalizeButton_Click">
                    <Path Style="{StaticResource NormalizeIconKey}" />
                </Button>
            </StackPanel>
        </Grid>

        <!--Tool Bar-->
        <Grid Grid.Row="2">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="LightSteelBlue" Offset="0"/>
                    <GradientStop Color="White" Offset="2"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="1.8*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1.8*"/>
                <ColumnDefinition Width="1.2*"/>
            </Grid.ColumnDefinitions>
            <!--<StackPanel Grid.Column="0"
                        Orientation="Horizontal" >
                <Button Content="Load" VerticalAlignment="Center" Height="40" Width="auto" Margin="5"     Command="{Binding CmdLoad}"/>
                <Button Content="Recipe" VerticalAlignment="Center" Height="40" Width="auto" Margin="5"   Command="{Binding CmdRecipe}"/>
                <Button Content="Engineer" VerticalAlignment="Center" Height="40" Width="auto" Margin="5" Command="{Binding CmdEngineer}"/>
                <Button Content="Review" VerticalAlignment="Center" Height="40" Width="auto" Margin="5" Command="{Binding CmdReview}"/>
            </StackPanel>-->
            <UniformGrid Columns="4">
                <Button Content="Load" VerticalAlignment="Center" Height="40" Width="auto"  Margin="4,0,4,0"  Command="{Binding CmdLoad}" Style="{StaticResource customButton}"/>
                <Button Content="Recipe" VerticalAlignment="Center" Height="40" Width="auto" Margin="4,0,4,0"   Command="{Binding CmdRecipe}" Style="{StaticResource customButton}"/>
                <Button VerticalAlignment="Center" Height="40" Width="auto" Command="{Binding CmdEngineer}"  Margin="4,0,4,0"  Style="{StaticResource customButton}">
                    <TextBlock TextWrapping="Wrap" TextAlignment="Center">
                        Engineer
                    </TextBlock>
                </Button>
                <Button Content="Review" VerticalAlignment="Center" Height="40" Width="auto" Margin="4,0,4,0" Command="{Binding CmdReview}"  Style="{StaticResource customButton}"/>
            </UniformGrid>
            <Grid Grid.Column="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderBrush="White" BorderThickness="2,0,1,1" Margin="10,0,0,0"> 
                        <TextBlock FontWeight="Bold" FontSize="16" Text="Comm State" FontFamily="consolas" TextAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <Border Grid.Row="1" BorderBrush="White" BorderThickness="2,1,1,0" Margin="10,0,0,0">
                        <TextBlock  FontWeight="Bold" FontSize="16" Text="Control State" FontFamily="consolas" TextAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <Border Grid.Column="1" Grid.Row="0" BorderBrush="White" BorderThickness="1,0,2,1" Margin="0,0,10,0" >
                        <TextBlock  FontWeight="Bold" FontSize="18" Text="{Binding Path=p_XGem.p_eComm, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumConverter}}" FontFamily="consolas" TextAlignment="Center" VerticalAlignment="Center">
                        </TextBlock>
                    </Border>
                    <Border Grid.Column="1" Grid.Row="1" BorderBrush="White" BorderThickness="1,1,2,0" Margin="0,0,10,0" >
                        <TextBlock  FontWeight="Bold" FontSize="18" Text="{Binding Path=p_XGem.p_eReqControl, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumConverter}}" FontFamily="consolas" TextAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=p_XGem.p_eReqControl, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumConverter}}" Value="Offline">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=p_XGem.p_eReqControl, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumConverter}}" Value="Online Local">
                                            <Setter Property="Foreground" Value="#22b14c"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=p_XGem.p_eReqControl, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumConverter}}" Value="Online Remote">
                                            <Setter Property="Foreground" Value="#22b14c"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Border>
                </Grid>
            </Grid>
            <Border Grid.Column="2" 
                    CornerRadius="0,0,50,50">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="SteelBlue" Offset="0"/>
                        <GradientStop Color="White" Offset="2"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock Text="CAMELLIA Ⅱ" VerticalAlignment="Center" HorizontalAlignment="Center"
                           FontSize="32" FontWeight="Bold" Foreground="AliceBlue"/>
            </Border>
            <Grid Grid.Column="3">
                <StackPanel VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Margin="10,0,0,0" Text="User State : " FontSize="16"
                           FontWeight="Bold" FontFamily="consolas"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"></TextBlock>
                        <!--Source={x:Static local:BaseDefine.Configuration}}-->
                        <TextBlock Text="{Binding Mode=TwoWay, Path=LoginSuccess, Source={x:Static local:BaseDefine.Configuration}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource LoginStateConverter}}" FontSize="18"
                                   FontWeight="Bold" FontFamily="consolas"
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mode=TwoWay, Path=LoginSuccess, Source={x:Static local:BaseDefine.Configuration} ,UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Foreground" Value="#22b14c"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Mode=TwoWay, Path=LoginSuccess, Source={x:Static local:BaseDefine.Configuration} ,UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Grid.Column="1">
                        <TextBlock Text="Equipment State :  "  FontFamily="consolas"
                           FontSize="16"
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="left"/>
                        <TextBlock Text="{Binding Mode=TwoWay, Path=p_eState, Source={x:Static tools:EQ.m_EQ}, UpdateSourceTrigger=PropertyChanged}"   FontFamily="consolas"
                           FontSize="20"
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mode=TwoWay, Path=p_eState, Source={x:Static tools:EQ.m_EQ}, UpdateSourceTrigger=PropertyChanged}" Value="Error">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <StackPanel Grid.Column="4"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Content="Setting" VerticalAlignment="Center" Height="40" Width="60" Margin="5" Command="{Binding CmdSetting}"  Style="{StaticResource customButton}"/>
                <Button Content="Exit" VerticalAlignment="Center" Height="40" Width="60" Margin="5" Command="{Binding CmdExit}"  Style="{StaticResource customButton}"/>
                <Border Width="60" Margin="5" BorderBrush="#FF707070" BorderThickness="1">
                    <Grid Opacity="0.8">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border BorderThickness="0,0,0,1" BorderBrush="#FF707070">
                            <!--<Grid Background="#FFDDDDDD"/>-->
                            <Grid x:Name="LampTop"/>
                        </Border>
                        <Border BorderThickness="0,0,0,1" BorderBrush="#FF707070" Grid.Row="1">
                            <Grid  x:Name="LampMid"/>
                        </Border>
                        <Border BorderThickness="0,0,0,0" BorderBrush="#FF707070" Grid.Row="2">
                            <Grid x:Name="LampBot"/>
                        </Border>
                    </Grid>
                </Border>
            </StackPanel>
        </Grid>

        <!--Menu-->
        <Menu Grid.Row="1" 
              Background="{DynamicResource ControlBackGround}"
              Height="25">
            <MenuItem Header="File" Height="25">
                <MenuItem Header="Load Recipe" Command="{Binding CmdLoad}"/>
                <MenuItem Header="Recipe Manager" Command="{Binding CmdRecipe}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Setting" Command="{Binding CmdSetting}"/>
            </MenuItem>
            <MenuItem Header="User">
                <MenuItem Header="Login" Command="{Binding CmdLogin}" />
                <MenuItem Header="Logout" Command="{Binding CmdLogout}"/>
            </MenuItem>
            <MenuItem Header="Test">
                <MenuItem Header="Engineer Test" Command="{Binding CmdEngineerTest}"/>
            </MenuItem>
        </Menu>

        <!--Main Panel-->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="750"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.75*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <GroupBox Header="Monitoring" Grid.Row="0" BorderBrush="Transparent" BorderThickness="1" Margin="1,0,3,0"  Background="White">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <Border CornerRadius="2" Background="White" Width="100" Height="auto">
                                <TextBlock Text="{Binding}" FontWeight="Bold" TextAlignment="Center"/>
                            </Border>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <GroupBox.Effect>
                        <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.5"/>
                    </GroupBox.Effect>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="FDC" BorderThickness="1" BorderBrush="Black" Background="White" Margin="0,0,5,0">
                            <!--<GroupBox.Effect>
                                <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.5"/>
                            </GroupBox.Effect>-->
                            <ItemsControl ItemsSource="{Binding GaugeListItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                        </Grid>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="Grid.Column"
                    Value="{Binding p_columnIndex}" />
                                        <Setter Property="Grid.Row"
                    Value="{Binding p_rowIndex}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ctrl:GaugeChart DataContext="{Binding Gauge}"></ctrl:GaugeChart>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                        <GroupBox Grid.Column="1" Header="FFU" BorderThickness="1" BorderBrush="Black" Background="White"  Margin="5,0,0,0">
                            <ItemsControl x:Name="FFUList" ItemsSource="{Binding FFUListItems}" ItemTemplateSelector="{DynamicResource FFUTemplateSelector}">
                                <!--ItemsSource="{Binding FanListItems, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">-->
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                        </Grid>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="Grid.Column"
                    Value="{Binding p_columnIndex}" />
                                        <Setter Property="Grid.Row"
                    Value="{Binding p_rowIndex}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.Resources>
                                    <DataTemplate x:Key="FanControl" DataType="{x:Type local:FFUListItem}">
                                        <ctrl:Fan VerticalAlignment="Center" HorizontalAlignment="Center" DataContext="{Binding Unit, UpdateSourceTrigger=Default, Mode=TwoWay}"/>
                                    </DataTemplate>
                                    <DataTemplate x:Key="HumidityControl" DataType="{x:Type local:FFUListItem}">
                                        <ctrl:Humidity VerticalAlignment="Center" HorizontalAlignment="Center" DataContext="{Binding Unit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    </DataTemplate>
                                    <DataTemplate x:Key="TemperatureControl" DataType="{x:Type local:FFUListItem}">
                                        <ctrl:Temp VerticalAlignment="Center" HorizontalAlignment="Center" DataContext="{Binding Unit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    </DataTemplate>
                                    <TemplateSelector:FFUTemplateSelector x:Key="FFUTemplateSelector"  Fan="{StaticResource FanControl}" Humidity="{StaticResource HumidityControl}" Temperature="{StaticResource TemperatureControl}"/>
                                </ItemsControl.Resources>
                            </ItemsControl>
                        </GroupBox>
                    </Grid>
                </GroupBox>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <lp:Loadport_UI DataContext="{Binding loadportA_ViewModel}"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <lp:Loadport_UI DataContext="{Binding loadportB_ViewModel}"/>
                    </Grid>
                </Grid>

            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Captured Image" BorderThickness="1" Background="White" BorderBrush="Transparent" Margin="3">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Border CornerRadius="2" Background="White" Width="100" Height="auto">
                                    <TextBlock Text="{Binding}" FontWeight="Bold" TextAlignment="Center"/>
                                </Border>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <GroupBox.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.5"/>
                        </GroupBox.Effect>
                        <Border BorderBrush="Black" BorderThickness="0">
                            <Canvas Background="Black" ClipToBounds="True" x:Name="canvas">
                                <Image Source="{Binding p_imageSource, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Path=ActualWidth, ElementName=canvas}" Height="{Binding Path=ActualHeight, ElementName=canvas}"  Stretch="Fill"></Image>
                            </Canvas>
                        </Border>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Header="Captured Image" BorderThickness="1" Background="White" BorderBrush="Transparent" Margin="3">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Border CornerRadius="2" Background="White" Width="100" Height="auto">
                                    <TextBlock Text="{Binding}" FontWeight="Bold" TextAlignment="Center"/>
                                </Border>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <GroupBox.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.5"/>
                        </GroupBox.Effect>
                        <Border BorderBrush="Black" BorderThickness="0">
                            <Canvas Background="Black" ClipToBounds="True" x:Name="canvas2" >
                                <Image Source="{Binding p_imageSourceSecond, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Path=ActualWidth, ElementName=canvas2}" Height="{Binding Path=ActualHeight, ElementName=canvas2}"  Stretch="Fill"></Image>
                            </Canvas>
                        </Border>
                    </GroupBox>
                </Grid>
                <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="55"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="1" BorderBrush="White" Margin="3,1,3,1" CornerRadius="3">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" Opacity="0.5"/>
                        </Border.Effect>
                    </Border>
                    <GroupBox Header="Current Position Information" Grid.Row="0" Margin="7,3,7,1" BorderThickness="1" Background="White" BorderBrush="White">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Border CornerRadius="2" Background="White" Width="170" Height="auto" Margin="0,2,0,0">
                                    <TextBlock Text="{Binding}" FontWeight="Bold" TextAlignment="Center"/>
                                </Border>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <!--<GroupBox.Effect>
                            <DropShadowEffect ShadowDepth="1" Color="Black" Opacity="0.5"/>
                        </GroupBox.Effect>-->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <UniformGrid Grid.Column="0" Columns="3" Background="Gainsboro" Margin="2">
                                <TextBlock Text="X" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1"/>
                                <TextBlock Text=":" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2"/>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource AxisToPositionConverter}" ConverterParameter="AxisX">
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisX"/>
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisX.p_posActual"/>
                                            <Binding Path="p_StageCenterPulse.X"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </UniformGrid>
                            <UniformGrid Grid.Column="1" Columns="3" Background="Gainsboro" Margin="2">
                                <TextBlock Text="Y" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1"/>
                                <TextBlock Text=":" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2"/>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource AxisToPositionConverter}" ConverterParameter="AxisY">
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisY"/>
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisY.p_posActual"/>
                                            <Binding Path="p_StageCenterPulse.Y"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </UniformGrid>
                        </Grid>
                    </GroupBox>
                    <Viewbox Margin="3"
                                 Grid.Row="1">
                            <stage:CamelliaStage/>
                        </Viewbox>
                        <Viewbox Margin="3"
                                 Grid.Row="1">
                            <ItemsControl ItemsSource="{Binding p_DrawCandidatePointElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" BorderBrush="Black" BorderThickness="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas ClipToBounds="True"  Width="{x:Static local:BaseDefine.CanvasWidth}" Height="{x:Static local:BaseDefine.CanvasHeight}" Background="#01FFFFFF" Focusable="true">
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Viewbox>
                        <Viewbox Margin="3"
                                 Grid.Row="1">
                            <ItemsControl ItemsSource="{Binding p_DrawPointElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" BorderBrush="Black" BorderThickness="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas ClipToBounds="True"  Width="{x:Static local:BaseDefine.CanvasWidth}" Height="{x:Static local:BaseDefine.CanvasHeight}" Background="#01FFFFFF" Focusable="true">
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Viewbox>
                        <Viewbox Margin="3" Grid.Row="1">
                            <ItemsControl ItemsSource="{Binding p_DrawRouteElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" BorderBrush="Black" BorderThickness="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas ClipToBounds="True"  Width="{x:Static local:BaseDefine.CanvasWidth}" Height="{x:Static local:BaseDefine.CanvasHeight}" Background="#01FFFFFF" Focusable="true">
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Viewbox>
                        <Viewbox Margin="3" Grid.Row="1">
                            <Canvas ClipToBounds="True"  Width="{x:Static local:BaseDefine.CanvasWidth}" Height="{x:Static local:BaseDefine.CanvasHeight}"
                                    Background="#01FFFFFF" Focusable="true">
                                <Border BorderBrush="Black" BorderThickness="1" Panel.ZIndex="99">
                                    <Grid>
                                        <Rectangle Width="5" Height="39" Fill="#990000FF" />
                                        <!--<TextBlock Text="Test" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center" />-->
                                        <Rectangle Width="39" Height="5" Fill="#990000FF" />
                                    </Grid>
                                    <Canvas.Left>
                                        <MultiBinding Converter="{StaticResource AxisToStageConverter}" ConverterParameter="40">
                                            <Binding Path="p_StageCenterPulse.X"/>
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisX.p_posActual"/>
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisX"/>
                                        </MultiBinding>
                                    </Canvas.Left>
                                    <Canvas.Top>
                                        <MultiBinding Converter="{StaticResource AxisToStageConverter}" ConverterParameter="40">
                                            <Binding Path="p_StageCenterPulse.Y"/>
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisY.p_posActual"/>
                                            <Binding Path="p_Module_Camellia.p_axisXY.p_axisY"/>
                                        </MultiBinding>
                                    </Canvas.Top>
                                </Border>
                                <Border BorderBrush="Black" BorderThickness="1">
                                    <Grid>
                                        <arrow:ArrowLine x:Name="arrowPoint" X1="{Binding p_ArrowX1, Converter={StaticResource PointToStageConverter}, ConverterParameter=X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Y1="{Binding p_ArrowY1, Converter={StaticResource PointToStageConverter}, ConverterParameter=Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         X2="{Binding p_ArrowX2, Converter={StaticResource PointToStageConverter}, ConverterParameter=X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Y2="{Binding p_ArrowY2, Converter={StaticResource PointToStageConverter}, ConverterParameter=Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Visibility="{Binding p_ArrowVisible, UpdateSourceTrigger=PropertyChanged}"  Width="1000" Height="1000" StrokeThickness="8" ArrowLength="30" ArrowAngle="80" >
                                            <arrow:ArrowLine.Stroke>
                                                <LinearGradientBrush StartPoint="{Binding p_GradientStartPoint, UpdateSourceTrigger=PropertyChanged}" EndPoint="{Binding p_GradientEndPoint, UpdateSourceTrigger=PropertyChanged}">
                                                    <GradientStop x:Name="GradientStop1" Color="Yellow" Offset="0.0" />
                                                    <GradientStop x:Name="GradientStop2" Color="Red" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </arrow:ArrowLine.Stroke>
                                            <arrow:ArrowLine.Triggers>
                                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard  RepeatBehavior="Forever">
                                                            <DoubleAnimation Storyboard.TargetName="GradientStop1"
                                                                             Storyboard.TargetProperty="Offset"
                                                                             From="0.0" To="1.0" Duration="0:0:1.5"
                                                                             AutoReverse="False" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </arrow:ArrowLine.Triggers>
                                        </arrow:ArrowLine>
                                    </Grid>
                                </Border>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:CallMethodAction TargetObject="{Binding}" MethodName="OnMouseLeftButtonDown" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Canvas>
                        </Viewbox>
                        <!--<Canvas Grid.Row="1" ClipToBounds="True"  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
                            <Rectangle Fill="Red" Width="30" Height="30" Canvas.Left="50" Canvas.Top="50"></Rectangle>
                        </Canvas>-->
                        <!--<Viewbox Margin="3" Grid.Row="1">
                            <ItemsControl
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" BorderBrush="Black" BorderThickness="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas ClipToBounds="True"  Width="{x:Static local:BaseDefine.CanvasWidth}" Height="{x:Static local:BaseDefine.CanvasHeight}">
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle Width="50" Height="50" Fill="Red"></Rectangle> 
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Viewbox>-->
                    </Grid>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0.06*"/>
                </Grid.RowDefinitions>
                <TabControl Grid.Column="2" Background="White" Margin="5">
                    <!--<TabControl.Effect>
                    <DropShadowEffect ShadowDepth="1" Opacity="0.5"/>
                </TabControl.Effect>-->
                    <TabItem Header="RT Graph" Style="{StaticResource customTabitem}">
                        <met:RTGraph DataContext="{Binding p_RTGraph, UpdateSourceTrigger=PropertyChanged}"/>
                    </TabItem>
                    <TabItem Header="Review" Width="100" Style="{StaticResource customTabitem}">
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.9*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <GroupBox Header="Contour Map" BorderThickness="0">
                                <Border BorderBrush="Black" BorderThickness="1">
                                    <ItemsControl ItemsSource="{Binding p_ContourMapCollection}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Grid/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <met:ContourMap DataContext="{Binding p_ContourMapGraph, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Border>
                            </GroupBox>
                            <GroupBox Header="Measurement Data" Grid.Row="1" BorderThickness="0">
                                <TabControl Background="Transparent">
                                    <TabItem Header="Point List" Style="{StaticResource customTabitem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="5*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <UniformGrid Grid.Row="0" Margin="3" Background="Gainsboro" Columns="3" Grid.ColumnSpan="2">
                                                <TextBlock Text="Count" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Text=":" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                <TextBlock Text="{Binding PointCount}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                            </UniformGrid>
                                            <DataGrid Grid.Row="1" ItemsSource="{Binding PointListItem}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" EnableColumnVirtualization="True" 
                                  EnableRowVirtualization="True" Grid.ColumnSpan="2" SelectionMode="Single" CanUserDeleteRows="False"
                                                  VirtualizingStackPanel.VirtualizationMode ="Recycling" VirtualizingStackPanel.IsVirtualizing = "true" Background="White">
                                                <DataGrid.Resources>
                                                    <Style TargetType="DataGridColumnHeader">
                                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                                    </Style>
                                                </DataGrid.Resources>
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Index" Width="*" Binding="{Binding ListIndex}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="X (mm)" Width="*" Binding="{Binding ListX}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="Y (mm)" Width="*" Binding="{Binding ListY}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="Route" Width="*" Binding="{Binding ListRoute}" IsReadOnly="True"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Parameter" Style="{StaticResource customTabitem}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="2.5*"/>
                                                <RowDefinition Height="1.5*"/>
                                                <RowDefinition Height="1*"/>
                                            </Grid.RowDefinitions>
                                            <GroupBox Header="Measurement Parameter" BorderThickness="0">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="2*"/>
                                                        <RowDefinition Height="0.4*"/>
                                                    </Grid.RowDefinitions>
                                                    <DataGrid Margin="5" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" EnableColumnVirtualization="True" 
                                  EnableRowVirtualization="True" ScrollViewer.CanContentScroll="True" SelectionMode="Single" ItemsSource="{Binding p_gridMeasureLayerData}" IsReadOnly="True" IsEnabled="{Binding p_mainRecipeData.p_useThickness, UpdateSourceTrigger=PropertyChanged}">
                                                        <DataGrid.Columns>
                                                            <DataGridTextColumn Header="" Width="auto" Binding="{Binding LayerHeader}" IsReadOnly="True" Foreground="Blue" FontWeight="ExtraBold"/>
                                                            <DataGridComboBoxColumn Width="auto" SelectedValueBinding="{Binding SelectedHost1, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" SelectedValuePath="FullPath">
                                                                <DataGridComboBoxColumn.Header>
                                                                    <TextBlock Width="auto" Text="Host" Style="{StaticResource GridHeaderStyle}"/>
                                                                </DataGridComboBoxColumn.Header>
                                                                <DataGridComboBoxColumn.ElementStyle>
                                                                    <Style TargetType="ComboBox">
                                                                        <Setter Property="ItemsSource" Value="{Binding Host1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                        <Setter Property="IsReadOnly" Value="True"/>
                                                                    </Style>
                                                                </DataGridComboBoxColumn.ElementStyle>
                                                                <DataGridComboBoxColumn.EditingElementStyle>
                                                                    <Style TargetType="ComboBox">
                                                                        <Setter Property="ItemsSource" Value="{Binding Host1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                    </Style>
                                                                </DataGridComboBoxColumn.EditingElementStyle>
                                                            </DataGridComboBoxColumn>
                                                            <DataGridTextColumn Width="auto" Binding="{Binding Thickness, StringFormat=N2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                                <DataGridTextColumn.Header>
                                                                    <TextBlock Text="Thick." Style="{StaticResource GridHeaderStyle}" />
                                                                </DataGridTextColumn.Header>
                                                            </DataGridTextColumn>
                                                            <DataGridCheckBoxColumn Width="auto" Binding="{Binding ThicknessFit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                                <DataGridCheckBoxColumn.Header>
                                                                    <TextBlock Text="fit" Style="{StaticResource GridHeaderStyle}" />
                                                                </DataGridCheckBoxColumn.Header>
                                                            </DataGridCheckBoxColumn>
                                                            <DataGridTextColumn Width="auto" Binding="{Binding ThicknessScale, StringFormat=N1, UpdateSourceTrigger=LostFocus, Mode=TwoWay}">
                                                                <DataGridTextColumn.Header>
                                                                    <TextBlock Text="Scale" Style="{StaticResource GridHeaderStyle}" />
                                                                </DataGridTextColumn.Header>
                                                            </DataGridTextColumn>
                                                            <DataGridTextColumn Width="auto" Binding="{Binding ThicknessOffset, StringFormat=N1, UpdateSourceTrigger=LostFocus, Mode=TwoWay}">
                                                                <DataGridTextColumn.Header>
                                                                    <TextBlock Text="Offset" Style="{StaticResource GridHeaderStyle}" />
                                                                </DataGridTextColumn.Header>
                                                            </DataGridTextColumn>
                                                        </DataGrid.Columns>
                                                    </DataGrid>
                                                    <UniformGrid Columns="2" Grid.Row="1">
                                                        <Grid Margin="3" Background="Gainsboro">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18*"/>
                                                                <ColumnDefinition Width="12*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Integration Time (VIS)" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0"/>
                                                            <TextBox Grid.Column="1" Margin="1" Text="{Binding p_mainRecipeData.p_VISIntegrationTime, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsEnabled="False" TextAlignment="Center" VerticalContentAlignment="Center"></TextBox>
                                                        </Grid>
                                                        <Grid Margin="3" Background="Gainsboro">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18*"/>
                                                                <ColumnDefinition Width="12*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Integration Time (NIR)" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0"/>
                                                            <TextBox Grid.Column="1" Margin="1" Text="{Binding p_mainRecipeData.p_NIRIntegrationTime, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" TextAlignment="Center" VerticalContentAlignment="Center"></TextBox>
                                                        </Grid>
                                                    </UniformGrid>
                                                </Grid>
                                            </GroupBox>
                                            <GroupBox Header="WaveLength Data" Grid.Row="1" BorderThickness="0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid Margin="3">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="0.2*"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <Border Background="White" BorderBrush="#ABADB3">
                                                                <TextBlock Grid.Row="0" Text="Reflectance" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,2" TextAlignment="Center"/>
                                                            </Border>
                                                            <!--<ListBox Grid.Row="1" ItemsSource="{Binding RecipeViewModel.ReflectanceListItem, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsSynchronizedWithCurrentItem="True" HorizontalContentAlignment="Center"/>-->
                                                            <DataGrid Grid.Row="1" ItemsSource="{Binding p_mainRecipeData.p_reflectanceListItem}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="True" EnableColumnVirtualization="True"  CanUserDeleteRows="False"
                                  EnableRowVirtualization="True" ScrollViewer.CanContentScroll="True" SelectionMode="Single">
                                                                <DataGrid.Columns>
                                                                    <DataGridTextColumn Header="Wave" Width="*" Binding="{Binding p_waveLength}" IsReadOnly="True"/>
                                                                    <DataGridTextColumn Header="Scale" Width="*" Binding="{Binding p_scale}" IsReadOnly="True"/>
                                                                    <DataGridTextColumn Header="Offset" Width="*" Binding="{Binding p_offset}" IsReadOnly="True"/>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                        </Grid>
                                                    </Grid>
                                                    <Grid Grid.Column="1" Margin="3">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="0.2*"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <Border Background="White" BorderBrush="#ABADB3">
                                                                <TextBlock Grid.Row="0" Text="Transmittance" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,2" TextAlignment="Center"/>
                                                            </Border>
                                                            <DataGrid Grid.Row="1" ItemsSource="{Binding p_mainRecipeData.p_transmittanceListItem}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="True" EnableColumnVirtualization="True"  CanUserDeleteRows="False"
                                  EnableRowVirtualization="True" ScrollViewer.CanContentScroll="True" SelectionMode="Single">
                                                                <DataGrid.Columns>
                                                                    <DataGridTextColumn Header="Wave" Width="*" Binding="{Binding p_waveLength}" IsReadOnly="True"/>
                                                                    <DataGridTextColumn Header="Scale" Width="*" Binding="{Binding p_scale}" IsReadOnly="True"/>
                                                                    <DataGridTextColumn Header="Offset" Width="*" Binding="{Binding p_offset}" IsReadOnly="True"/>
                                                                </DataGrid.Columns>
                                                            </DataGrid>
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                            </GroupBox>
                                            <GroupBox Header="Thickness Parameter" Grid.Row="2" BorderThickness="0">
                                                <Grid>
                                                    <UniformGrid Columns="2" Rows="2">
                                                        <Grid Margin="3" Background="Gainsboro">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18*"/>
                                                                <ColumnDefinition Width="12*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Lower WaveLength" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0"/>
                                                            <TextBox Grid.Column="1" Margin="1" Text="{Binding p_mainRecipeData.p_lowerWaveLength, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False"></TextBox>
                                                        </Grid>
                                                        <Grid Margin="3" Background="Gainsboro">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18*"/>
                                                                <ColumnDefinition Width="12*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Upper WaveLength" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0"/>
                                                            <TextBox Grid.Column="1" Margin="1" Text="{Binding p_mainRecipeData.p_upperWaveLength, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False"></TextBox>
                                                        </Grid>
                                                        <Grid Margin="3" Background="Gainsboro">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18*"/>
                                                                <ColumnDefinition Width="12*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Thickness LM Iteration" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0"/>
                                                            <TextBox Grid.Column="1" Margin="1" Text="{Binding p_mainRecipeData.p_thicknessLMIteration, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False"></TextBox>
                                                        </Grid>
                                                        <Grid Margin="3" Background="Gainsboro">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="18*"/>
                                                                <ColumnDefinition Width="12*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="Damping Factor" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0"/>
                                                            <TextBox Grid.Column="1" Margin="1" Text="{Binding p_mainRecipeData.p_dampingFactor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False"></TextBox>
                                                        </Grid>
                                                    </UniformGrid>
                                                </Grid>
                                            </GroupBox>
                                        </Grid>
                                    </TabItem>
                                </TabControl>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Log" Width="80" Style="{StaticResource customTabitem}">
                        <tools:LogView_UI x:Name="LogUI" Margin="2"/>
                    </TabItem>
                </TabControl>
                <GroupBox Header="Current Measure Progress" Grid.Row="1" BorderThickness="0" Background="White" Margin="1">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border  CornerRadius="2" Background="White" Width="170" Height="auto" BorderBrush="White" BorderThickness="0">
                                    <TextBlock Background="White" Text="{Binding}" FontWeight="Bold" TextAlignment="Center" TextOptions.TextRenderingMode="ClearType"/>
                                </Border>

                            </Grid>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid>
                        <ProgressBar Minimum="0" Maximum="100" Margin="2" Value="{Binding p_Progress, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding p_ProgressColor}" Style="{StaticResource CustomProgress}"/>
                        <TextBlock Text="{Binding p_Progress, Converter={StaticResource ProgressConverter}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
                    </Grid>
                </GroupBox>
            </Grid>
            <Grid Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3.7*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <StackPanel  Grid.Row="0">
                    <Border Height="50" Margin="0,20,3,10" Background="AliceBlue" CornerRadius="10">
                        <TextBlock Grid.Column="2" x:Name="tbTime"
                           Text="2021-05-14 15:39:47"
                           FontSize="15" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"/>
                    </Border>
                    <Border  Background="LightGray" CornerRadius="10" Margin="0,0,0,10">
                        <TextBlock Grid.Column="2" Text="Module" 
                           FontSize="15" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"/>
                    </Border>
                    <Button Content="Resume" x:Name="buttonResume" Margin="0,0,0,15" 
                            Style="{StaticResource customButton}" FontSize="15" FontWeight="Bold"
                            Height="40"
                            Click="buttonResume_Click"/>
                    <Button Content="Pause" x:Name="buttonPause" Margin="0,0,0,15"  FontSize="15" FontWeight="Bold"
                            Style="{StaticResource customButton}" 
                            Height="40"
                            Click="buttonPause_Click"/>
                    <Button Content="Initial" x:Name="buttonInit" Margin="0,0,0,15" FontSize="15" FontWeight="Bold"
                            Style="{StaticResource customButton}" 
                            Height="40"
                            Click="buttonInit_Click"/>
                    <Button Content="Recovery" x:Name="buttonRecovery" Margin="0,0,0,15"  FontSize="15" FontWeight="Bold"
                            Style="{StaticResource customButton}" 
                            Height="40"
                            Click="buttonRecovery_Click"/>
                    <Button Content="Buzzer Off" x:Name="buttonBuzzerOff" Margin="0,0,0,15" FontSize="15" FontWeight="Bold"
                            Style="{StaticResource customButton}" 
                            Height="40"
                            Click="buttonBuzzerOff_Click"/>
                </StackPanel>

                <StackPanel Grid.Row="1" Margin="0,20,0,0">
                    <Border  Background="LightGray" CornerRadius="10" Margin="0,0,0,10">
                        <TextBlock Grid.Column="2" Text="Automation" 
                           FontSize="15" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"/>
                    </Border>
                    <Button Content="OHT" x:Name="buttonOHT"  FontSize="15" FontWeight="Bold"
                            Style="{StaticResource customButton}"
                            Height="40" Margin="0,0,0,15"
                            Click="buttonOHT_Click"/>
                    <Button Content="Offline" FontSize="15" FontWeight="Bold" Margin="0,0,0,15"
                            Style="{StaticResource customButton}" Command="{Binding CmdOffline}"
                            Height="40" />
                    <Button Content="Online Local" FontSize="15" FontWeight="Bold" Margin="0,0,0,15"
                            Style="{StaticResource customButton}" Command="{Binding CmdOnlineLocal}"
                            Height="40" />
                    <Button Content="Online Remote" FontSize="15" FontWeight="Bold" Margin="0,0,0,15"
                            Style="{StaticResource customButton}" Command="{Binding CmdOnlineRemote}"
                            Height="40" />
                </StackPanel>
                <Grid  Grid.Row="2" Margin="7">
                    <Border BorderThickness="1" BorderBrush="White" CornerRadius="2">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" Opacity="0.5"/>
                            </Border.Effect>
                    </Border>
                    <GroupBox Header="Lamp" Background="White" Margin="5" BorderThickness="0">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border  CornerRadius="2" Background="White" Width="30" Height="auto" BorderBrush="White" BorderThickness="0">
                                    </Border>
                                    <TextBlock Background="White" Text="{Binding}" FontWeight="Bold" TextAlignment="Center" TextOptions.TextRenderingMode="ClearType"/>
                                </Grid>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="Lamp Use Time" TextTrimming="WordEllipsis" ToolTip="Lamp Use Time" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,10,0,5" TextOptions.TextRenderingMode="ClearType" />
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="6*"/>
                                        <ColumnDefinition Width="4*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding p_lampUsetime ,UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,0" VerticalAlignment="Center" TextAlignment="Right" HorizontalAlignment="Center" Width="60" FontSize="15"/>
                                    <TextBlock Grid.Row= "1" Grid.Column="1" Text="Hours"  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"/>
                                </Grid>
                                <TextBlock Grid.Row="2" Text="{Binding p_lampUsetime, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource OpticLampTimeToStringConverter}}" Margin="5,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="10" FontWeight="Bold" Foreground="Red" />
                                <TextBlock Grid.Row="3" Text="Lamp Status" FontSize="15" ToolTip="Lamp Status" TextTrimming="WordEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,10,5,5" />
                                <Grid Grid.Row="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <PackIcon:PackIconMaterial Margin="25,0,0,0" Width="auto" Height="auto" Kind="LightbulbOn" Foreground="{Binding p_lampStatus, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource OpticLampStateColorConverter}}" />
                                    <TextBlock Grid.Column="1" FontSize="15" FontWeight="Bold" Text="{Binding p_lampStatus, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource OpticLampStatusEnumConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>

                                <!--<Border x:Name="LampStateColor" Grid.Row="4">
                                    <TextBlock Text="{Binding p_LampStatus, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>-->

                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>
        </Grid>

    </Grid>
</Window>
