using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RootTools_Vision
{
    public delegate void StateChanged(object obj);

    public class WorkplaceBundle : Collection<Workplace>
    {
        public event StateChanged WorkplaceStateChanged;

        public WorkplaceBundle()
        {

        }

        public new void Add(Workplace workplace)
        {
            workplace.StateChanged += WorkplaceStateChanged_Callback;
            base.Add(workplace);
        }

        public Workplace GetWorkplaceByState(WORKPLACE_STATE state)
        {
            foreach(Workplace workplace in this)
            {
                if(workplace.STATE == state)
                {
                    return workplace;
                }
            }

            return null;
        }

        public void WorkplaceStateChanged_Callback(object obj)
        {
            if (WorkplaceStateChanged != null)
                WorkplaceStateChanged(obj);
        }
    }
}
