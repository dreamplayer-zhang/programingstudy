<UserControl x:Class="RootTools.RootViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:convert="clr-namespace:ViewConverter"
             xmlns:obs="clr-namespace:nsSizeObserver"
             mc:Ignorable="d" 
             Cursor="{Binding p_Cursor, Mode=TwoWay}"
             d:DesignHeight="500" d:DesignWidth="500">
    <UserControl.Resources>
        <convert:ConverterVisibleProgress x:Key="ConverterVisibleProgresss" />
        <convert:ZoomConverter x:Key="ZoomConverters" />
    </UserControl.Resources>
    <DockPanel>
        <Grid Name="MenuBarGrid"
              DockPanel.Dock="Top" Background="{StaticResource ControlBackGround}"
              Focusable="False"
              Visibility="{Binding p_VisibleMenu}">
            <Menu Background="{StaticResource ControlBackGround}" VerticalAlignment="Center">
                <MenuItem BorderBrush="{x:Null}" Header="File" FontFamily="Arial" Margin="2,0" Height="30">
                    <MenuItem Header="Load Image" Command="{Binding OpenImage}"/>
                    <MenuItem Header="Save Image" Command="{Binding SaveImage}"/>
                    <MenuItem Header="Clear Image" Command="{Binding ClearImage}"/>
                </MenuItem>
                <MenuItem BorderBrush="{x:Null}" Header="Edit" FontFamily="Arial" Margin="2,0" Height="30">
                    <MenuItem Header="Undo"   IsEnabled="False"/>
                    <MenuItem Header="Redo"   IsEnabled="False"/>
                    <MenuItem Header="Copy"   IsEnabled="False"/>
                    <MenuItem Header="Paste"  IsEnabled="False"/>
                    <MenuItem Header="Delete" IsEnabled="False"/>
                </MenuItem>
                <MenuItem BorderBrush="{x:Null}" Header="ColorMode" FontFamily="Arial" Margin="2,0" Height="30" >
                    <MenuItem Header="All" Command="{Binding CommandColorAll}"  />
                    <MenuItem Header="R"   Command="{Binding CommandColorR}"/>
                    <MenuItem Header="G"   Command="{Binding CommandColorG}"/>
                    <MenuItem Header="B"   Command="{Binding CommandColorB}"/>
                </MenuItem>
            </Menu>
        </Grid>
        <Grid DockPanel.Dock="Bottom" Background="{StaticResource ControlBackGround}" Focusable="False">
            <Grid HorizontalAlignment="Left" Margin="5,0">
                <StackPanel Orientation="Horizontal" TextElement.Foreground="{StaticResource MainThema}">
                    <TextBlock Text="{Binding p_MouseX}"/>
                    <TextBlock Text=","/>
                    <TextBlock Text="{Binding p_MouseY}"/>
                    <TextBlock Text=" ("/>
                    <TextBlock Text="{Binding p_MouseMemX}"/>
                    <TextBlock Text=","/>
                    <TextBlock Text="{Binding p_MouseMemY}"/>
                    <TextBlock Text=")"/>
                </StackPanel>
            </Grid>
            <Grid HorizontalAlignment="Right" Margin="5,0">
                <StackPanel Orientation="Horizontal" TextElement.Foreground="{StaticResource MainThema}">
                    <TextBlock Text="{Binding p_PixelData}"/>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid>
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image Source="{Binding p_LayerSource}" Opacity="1" Grid.Column="1"/>-->

            <Grid Focusable="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="KeyEvent"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewKeyUp">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="KeyEvent"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="PreviewMouseDown"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="PreviewMouseUp"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="MouseMove"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseWheel">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="MouseWheel"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Canvas Background="Black" obs:SizeObserver.Observe="true" Focusable="True"
                obs:SizeObserver.ObservedWidth="{Binding p_CanvasWidth, Mode=TwoWay}"
                obs:SizeObserver.ObservedHeight="{Binding p_CanvasHeight, Mode=OneWayToSource}" Grid.ColumnSpan="2">
                    <Image Source="{Binding Path=p_ImgSource}" Stretch="Fill"/>
                </Canvas>
                <Canvas ClipToBounds="True"
                        obs:SizeObserver.Observe="true"
                        obs:SizeObserver.ObservedWidth="{Binding p_LayerCanvasWidth, Mode=OneWayToSource}"
                        obs:SizeObserver.ObservedHeight="{Binding p_LayerCanvasHeight, Mode=OneWayToSource}">
                    <Image Source="{Binding p_LayerSource}"
                           Canvas.Left="{Binding p_LayerCanvasOffsetX}"
                           Canvas.Top="{Binding p_LayerCanvasOffsetY}"
                           Opacity="0.5"
                           Grid.Column="1" />
                </Canvas>
                <ItemsControl ItemsSource="{Binding p_ViewElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas ClipToBounds="True"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl> 
                <ItemsControl ItemsSource="{Binding p_UIElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas ClipToBounds="True" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding p_DrawElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas ClipToBounds="True"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>

            <Grid Panel.ZIndex="99" VerticalAlignment="Bottom" Margin="0,0,0,10">
                <TextBlock Text="{Binding p_Zoom, StringFormat=F2}" Foreground="White" 
                           HorizontalAlignment="Center"
                           VerticalAlignment="Bottom"
                           Opacity="0.5"/>
                <Slider Panel.ZIndex="5" VerticalAlignment="Bottom" Width="200" Height="20"
                        Visibility="{Binding p_VisibleSlider}"
                        Margin="0,0,0,15"
                        Value="{Binding p_Zoom, Converter={StaticResource ZoomConverters}, Mode=TwoWay}" 
                        Minimum="1" Maximum="1000"
                        SmallChange="10" LargeChange="100" Focusable="False">
                    <Slider.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Slider.IsMouseOver" Value="False">
                                    <Setter Property="Slider.Opacity" Value="0.2"/>
                                </Trigger>
                                <Trigger Property="Slider.IsMouseOver" Value="True">
                                    <Setter Property="Slider.Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </Slider>

            </Grid>
            <Grid Visibility="{Binding Path=p_nProgress, Converter={StaticResource ConverterVisibleProgresss}}">
                <ProgressBar Grid.Row="1" Value="{Binding p_nProgress}" Width="300" Height="35"/>
                <TextBlock Foreground="Black"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Text="{Binding Path = p_nProgress, StringFormat={}{0:0}%}"
                           TextAlignment="Center" FontSize="30"/>
                <ToggleButton Grid.Row="1" Width="100" Height="30" Margin="0,120,0,0" 
                              Background="AliceBlue" 
                              Command="{Binding CancelCommand}">
                    <Grid Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30*"/>
                            <ColumnDefinition Width="90*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Cancel" Margin="0" Grid.Column="1"
                           Foreground="black"
                        VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                </ToggleButton>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
