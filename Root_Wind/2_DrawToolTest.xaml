<UserControl x:Class="Root_Wind._2_DrawToolTest"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:tools ="clr-namespace:RootTools;assembly=RootTools"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:obs="clr-namespace:nsSizeObserver;assembly=RootTools"
             xmlns:mouse="clr-namespace:mousebehavior;assembly=RootTools"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:converter ="clr-namespace:ModeConverter"
             xmlns:marterial="http://materialdesigninxaml.net/winfx/xaml/themes" 
             mc:Ignorable="d" Cursor="{Binding RecipeCursor}" Focusable="False"
             d:DesignHeight="726" d:DesignWidth="1442" Background="#FF2D2D30">
    <UserControl.Resources>
        <converter:ModeConverter x:Key="ModeConverter" />
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontFamily" Value="Arial"/>
            <Setter Property="TextBlock.FontSize" Value="13"/>
            <Setter Property="TextBlock.Foreground" Value="White"/>
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <!--<Setter Property="TextBlock.BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Color="LightGray"/>
                </Setter.Value>
            </Setter>-->
        </Style>
        <Style TargetType="Button" x:Key="TabBtn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Gray"
                                BorderThickness="0"
                                x:Name="Bdr"
                                Margin="0,0,0,0">
                            <TextBlock FontSize="15"
                                       FontFamily="Arial"
                                       Foreground="White"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center">
                                <ContentPresenter Margin="10"/>
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style TargetType="Button" x:Key="MyBtn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0"
                                Background="#FF1B1B1C"
                                BorderBrush="Gray"
                                BorderThickness="0"
                                x:Name="Bdr"
                                Margin="0,0,0,0">
                            <TextBlock FontSize="15"
                                       FontFamily="Arial"
                                       Foreground="White"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center">
                                <ContentPresenter Margin="10"/>
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter TargetName="Bdr" Property="Background" Value="#FF3E3E40"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="Bdr" Property="Background" Value="#FF43437A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style TargetType="{x:Type TabControl}" x:Key="MyTabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid UseLayoutRounding="True">
                            <Grid IsItemsHost="True"
                                  Panel.ZIndex="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabItem" x:Key="MyTabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <!--Mouse Over FF3E3E40
                            Selected   FF43437A
                            Normal     FF1B1B1C-->
                        <Grid Name="Panel" 
                              Margin="5,0,5,0"
                              Background="#FF1B1B1C">
                            <Button Margin="0"
                                    Style="{StaticResource TabBtn}"
                                    x:Name="btn"
                                    Command="{Binding btnTabNone}">
                            </Button>
                            <ContentPresenter ContentSource="Header"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="False">
                                <Setter TargetName="btn" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="#FF3E3E40"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="#FF43437A" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="75*"/>
            <ColumnDefinition Width="25*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Margin="15,20,15,15">
            <tools:ImageViewer DataContext="{Binding p_ImageViewer}"
                               Width="{PriorityBinding}"
                               Height="{PriorityBinding}"/>
                    <ItemsControl ItemsSource="{Binding p_UIElement}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas ClipToBounds="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                <i:Interaction.Behaviors>
                    <mouse:MouseBehaviour MouseEvent="{Binding MouseEvent, Mode=OneWayToSource}"/>
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseMove}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding CanvasMouseLeftDown}" />
                    </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseLeftUp}" />
                </i:EventTrigger>
                    <i:EventTrigger EventName="MouseWheel">
                    <i:InvokeCommandAction Command="{Binding CanvasMouseWheel}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
        </Grid>
        <Grid Grid.Column="1" Margin="0,15,15,15">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <StackPanel>
                    <Button Content="Open Image" Command="{Binding p_ImageViewer.btnClickOpenImage}"
                            Style="{StaticResource MyBtn}" Margin="0,20,0,10"/>
                    <Button Content="Draw Origin" Command="{Binding btnDrawOrigin}"
                            Style="{StaticResource MyBtn}" Margin="0,0,0,10"/>
                    <TabControl Style="{StaticResource MyTabControl}" Margin="0,0,0,10"
                                SelectedIndex="{Binding p_Mode, Converter={StaticResource ModeConverter}, Mode=TwoWay}">
                        <TabItem Style="{StaticResource MyTabItem}" Grid.Column="0"/>
                        <TabItem Style="{StaticResource MyTabItem}" Grid.Column="1">
                            <TabItem.Header>
                                    <marterial:PackIcon Kind="SquareOutline" 
                                                        Foreground="White"
                                                        Width="30" Height="30"/>
                            </TabItem.Header>
                        </TabItem>
                        <TabItem Style="{StaticResource MyTabItem}" Grid.Column="2">
                            <TabItem.Header>                               
                                <marterial:PackIcon Kind="Abc"
                                                    Foreground="White"
                                                    Width="30" Height="30"/>
                            </TabItem.Header>
                        </TabItem>
                        <TabItem Style="{StaticResource MyTabItem}" Grid.Column="3">
                            <TabItem.Header>
                                <marterial:PackIcon Kind="Plus"
                                                    Foreground="White"
                                                    Width="30" Height="30"/>
                            </TabItem.Header>
                        </TabItem>
                        <TabItem Style="{StaticResource MyTabItem}" Grid.Column="4">
                            <TabItem.Header>
                                <marterial:PackIcon Kind="Ruler"
                                                    Foreground="White"
                                                    Width="30" Height="30"/>
                            </TabItem.Header>
                        </TabItem>                   
                    </TabControl>
                    <Button Content="Clear" Command="{Binding btnClear}"
                            Style="{StaticResource MyBtn}" Margin="0,0,0,10"/>
                    <Grid>
                        <StackPanel>
                            <WrapPanel Margin="3">
                                <TextBlock Text="(X,Y) = " />
                                <TextBlock Text="{Binding p_ImageViewer.p_MouseX}" />
                                <TextBlock Text=", " />
                                <TextBlock Text="{Binding p_ImageViewer.p_MouseY}" />
                            </WrapPanel>
                            <WrapPanel Margin="3">
                                <TextBlock Text="(Mem X,Y) = " />
                                <TextBlock Text="{Binding p_ImageViewer.p_MouseMemX}" />
                                <TextBlock Text=", " />
                                <TextBlock Text="{Binding p_ImageViewer.p_MouseMemY}" />
                            </WrapPanel>
                            <WrapPanel Margin="3">
                                <TextBlock Text="GV = " />
                                <TextBlock Text="{Binding Test}" Margin="0,0,70,0" />
                                <TextBlock Text="Zoom = " />
                                <TextBlock Text="{Binding Path=p_ImageViewer.p_Zoom, StringFormat=F3}" 
                                           Margin="0,0,70,0"/>
                            </WrapPanel>
                        </StackPanel>
                        
                    </Grid>
                </StackPanel>
            </Grid>
            <Canvas Grid.Row="1" obs:SizeObserver.Observe="true" Focusable="True"
                    obs:SizeObserver.ObservedWidth="{Binding p_ImageViewer.p_ThumbWidth, Mode=OneWayToSource}"
                    obs:SizeObserver.ObservedHeight="{Binding p_ImageViewer.p_ThumbHeight, Mode=OneWayToSource}"
                    Background="Black">
                <Image Source="{Binding Path= p_ImageViewer.p_ThumNailImgSource}" />
                <Rectangle Margin="{Binding Path = p_ImageViewer.p_TumbnailImgMargin}"
                        Width="{Binding p_ImageViewer.p_TumbnailImg_Rect.Width}"
                        Height="{Binding p_ImageViewer.p_TumbnailImg_Rect.Height}" Stroke="Blue"
                        StrokeThickness="4"/>
                <i:Interaction.Behaviors>
                    <mouse:MouseBehaviour MouseEvent="{Binding MouseEvent, Mode=OneWayToSource}"/>
                    <mouse:MouseBehaviour
                            MouseX="{Binding p_ImageViewer.p_TumbMouseX, Mode=OneWayToSource}"
                            MouseY="{Binding p_ImageViewer.p_TumbMouseY, Mode=OneWayToSource}" />
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseLeftDown}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseMove}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseLeave}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                                Command="{Binding p_ImageViewer.TumbNailMouseLeftUp}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Canvas>
        </Grid>
    </Grid>
</UserControl>
