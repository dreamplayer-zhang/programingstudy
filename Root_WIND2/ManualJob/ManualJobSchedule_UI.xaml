<Window x:Class="Root_WIND2.ManualJobSchedule_UI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        WindowStyle="SingleBorderWindow" Closing="Window_Closing" Title="Job Select" Height="740"
        Width="1000" Background="White" Topmost="True" WindowStartupLocation="CenterScreen">
    <!--Title="ManualJobSchedule_UI" Height="600" Width="700" Background="#FF2D2D30" Topmost="True">-->
    <Window.Resources>
        <LinearGradientBrush x:Key="BtnGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF3E3E40" Offset="0" />
            <GradientStop Color="#FF3E3E40" Offset="0.5" />
            <GradientStop Color="#FF3E3E40" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="DarkSlateGray" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}"
                                BorderThickness="2" BorderBrush="DarkSlateGray">
                            <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                        Value="{StaticResource BtnGradientBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="20" Background="{TemplateBinding Background}"
                                BorderThickness="2" BorderBrush="White">
                            <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                        Value="{StaticResource BtnGradientBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="25" Height="25" CornerRadius="0"
                                        Background="White" BorderThickness="1" BorderBrush="#404040">
                                    <Path Width="14" Height="14" x:Name="CheckMark"
                                            SnapsToDevicePixels="False" Stroke="#404040"
                                            StrokeThickness="3" Data="M 0 0 L 7 14 M 7 14 L 14 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center"
                                    HorizontalAlignment="Left" RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#888888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="SwitchTypeToggleButton" TargetType="{x:Type ToggleButton}">-->
        <Style TargetType="{x:Type ToggleButton}">
            <Style.Resources>
                <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
                <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
                <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
                <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>
                <Style x:Key="ToggleButtonContentTextbox" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                </Style>
                <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                        Color="{StaticResource Color.Additional.LightGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                        Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
                <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                        Color="{StaticResource Color.Additional.MediumGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                        Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
                <TextBlock x:Key="OffContent" Style="{StaticResource ToggleButtonContentTextbox}"
                        Text="Off" />
            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="MainRow">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                            Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition
                                            Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="BackgroundEllipse1" Grid.RowSpan="2"
                                        Grid.Column="0" Grid.ColumnSpan="3" Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}" Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}" HorizontalAlignment="Left"
                                        Fill="{StaticResource ToggleButtonTrueBackground}" />
                                <Ellipse x:Name="BackgroundEllipse2" Grid.Row="0" Grid.RowSpan="2"
                                        Grid.Column="0" Grid.ColumnSpan="3" Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}" Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}" HorizontalAlignment="Right"
                                        Fill="{StaticResource ToggleButtonFalseBackground}" />
                                <Border x:Name="BackgroundBorder" Grid.Row="0" Grid.RowSpan="2"
                                        Grid.Column="1"
                                        Background="{StaticResource ToggleButtonTrueBackground}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="AnimationWidth" />
                                    <ColumnDefinition
                                            Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="AnimationSizeBorder" Grid.Column="0" />
                                <!--<ContentControl Grid.Column="0" Style="{StaticResource OnContentControl}" />-->
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                            Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <!--<ContentControl Grid.Column="1" Style="{StaticResource OffContentControl}" />-->
                            </Grid>
                            <Grid Background="Transparent">
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <Border
                                            Width="{Binding ElementName=AnimationSizeBorder, Path=ActualWidth}" />
                                    <Ellipse x:Name="ForegroundEllipse"
                                            Width="{Binding ElementName=MainRow, Path=ActualHeight}"
                                            Height="{Binding ElementName=MainRow, Path=ActualHeight}"
                                            HorizontalAlignment="Right"
                                            Fill="{StaticResource ToggleButtonTrueForeground}" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background"
                                        Value="{StaticResource ToggleButtonFalseBackground}" />
                                <Setter TargetName="ForegroundEllipse" Property="Fill"
                                        Value="{StaticResource ToggleButtonFalseForeground}" />
                                <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="6*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*" />
                <RowDefinition Height="6*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Height="auto">
                <GroupBox FontSize="20" Header="Infomation" Height="auto" Foreground="Black"
                        FontWeight="Bold">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Margin="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="20,0,0,0" FontSize="20"
                                        VerticalAlignment="Center" FontWeight="Bold"
                                        Text="Location ID" Foreground="CornflowerBlue"></TextBlock>
                                <TextBox Grid.Column="1" Text="test1234" Foreground="black"
                                        VerticalAlignment="Center" BorderThickness="0"
                                        x:Name="textboxLocID" TextAlignment="Center"
                                        FontWeight="Bold" />
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" BorderBrush="Black" BorderThickness="1"
                                CornerRadius="5" Margin="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="20,0,0,0" FontSize="20"
                                        VerticalAlignment="Center" FontWeight="Bold" Text="Lot ID"
                                        Foreground="CornflowerBlue"></TextBlock>
                                <TextBox Grid.Column="1" Text="test1234" Foreground="black"
                                        VerticalAlignment="Center" x:Name="textboxLotID"
                                        BorderThickness="0" TextAlignment="Center" FontWeight="Bold" />
                            </Grid>
                        </Border>
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Margin="10"
                                Grid.Row="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="20,0,0,0" FontSize="20"
                                        VerticalAlignment="Center" FontWeight="Bold"
                                        Text="Cassette ID" Foreground="CornflowerBlue"></TextBlock>
                                <TextBox Grid.Column="1" Text="test1234" Foreground="black"
                                        VerticalAlignment="Center" x:Name="textboxCstID"
                                        BorderThickness="0" TextAlignment="Center" FontWeight="Bold" />
                            </Grid>
                        </Border>
                        <!--<StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="Location ID = " VerticalAlignment="Center"/>
                            <TextBox x:Name="textboxLocID" VerticalAlignment="Center" TextAlignment="Left" MinWidth="100"/>
                        </StackPanel>-->
                        <!--<StackPanel Grid.Row="1" Orientation="Horizontal">
                            <TextBlock Text="Lot ID = " VerticalAlignment="Center"/>
                            <TextBox x:Name="textboxLotID" VerticalAlignment="Center" TextAlignment="Left" MinWidth="100"/>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                            <TextBlock Text="Carrier ID = " VerticalAlignment="Center"/>
                            <TextBox x:Name="textboxCstID" VerticalAlignment="Center" TextAlignment="Left" MinWidth="100"/>
                        </StackPanel>-->
                    </Grid>
                </GroupBox>
            </Grid>
            <Grid Grid.Row="1" Height="auto">
                <GroupBox FontSize="20" Header="Recipe Select" Height="auto" Foreground="Black"
                        FontWeight="Bold">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="20,0,0,0" FontSize="20" VerticalAlignment="Center"
                                    FontWeight="Bold" Text="Recipe ID" Foreground="CornflowerBlue"></TextBlock>
                            <ComboBox x:Name="comboRecipeID" MinWidth="150" VerticalAlignment="Center"
                                      Grid.Column="1"
                                SelectionChanged="comboRecipeID_SelectionChanged" />
                            <!--<TextBox Grid.Column="1" Text="test1234" Foreground="black"
                                    VerticalAlignment="Center"
                                    BorderThickness="0" TextAlignment="Center" FontWeight="Bold" />-->
                        </Grid>
                        <ListView Grid.Row="1" BorderThickness="0">
                        </ListView>
                        
                    </Grid>
                </GroupBox>
            </Grid>
            <Grid Grid.Row="2" Height="auto">
                <GroupBox FontSize="20" Header="Option" Height="auto" Foreground="Black">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="7*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <ToggleButton Margin="6" IsChecked="{Binding p_bRnR}" />
                            </Grid>
                            <Grid Grid.Column="1">
                                <TextBlock Text="RNR Mode" TextAlignment="Left"
                                        VerticalAlignment="Center" Margin="10" Foreground="Black" />
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="RNR Count = " TextAlignment="Left"
                                    x:Name="textblockRnR" Visibility="Visible" Margin="10" />
                            <TextBox Grid.Column="1" TextAlignment="Center" VerticalAlignment="Top"
                                    HorizontalAlignment="Left" Margin="0,10,10,0"
                                     x:Name="textboxRnR"
                                     Visibility="Visible" Text="1" Width="100" />
                        </Grid>
                    </Grid>

                </GroupBox>
            </Grid>
        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="8*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <!--<local:ManualSlot_UI Width="auto" Height="auto"/>-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="9*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1.2*" />
                        <ColumnDefinition Width="1.3*" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="2.5*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Border BorderThickness="2" BorderBrush="White" />
                        <TextBlock Text="Slot" Margin="4" FontSize="20" VerticalAlignment="Center"
                                TextAlignment="Center" Foreground="Black" Background="White"
                                FontWeight="Bold" />
                    </Grid>
                    <Grid Grid.Column="1">
                        <Border BorderThickness="2" BorderBrush="White" />
                        <TextBlock Text="Select" Margin="4" FontSize="20" VerticalAlignment="Center"
                                TextAlignment="Center" Foreground="Black" Background="White"
                                FontWeight="Bold" />
                    </Grid>
                    <Grid Grid.Column="2">
                        <Border BorderThickness="2" BorderBrush="White" />
                        <TextBlock Text="State" Margin="4" FontSize="20" VerticalAlignment="Center"
                                TextAlignment="Center" Foreground="Black" Background="White"
                                FontWeight="Bold" />
                    </Grid>
                    <Grid Grid.Column="3">
                        <Border BorderThickness="2" BorderBrush="White" />
                        <TextBlock Text="Recipe ID" Margin="4" FontSize="20"
                                VerticalAlignment="Center" TextAlignment="Center" Foreground="Black"
                                Background="White" FontWeight="Bold" />
                    </Grid>
                    <Grid Grid.Column="4">
                        <Border BorderThickness="2" BorderBrush="White" />
                        <TextBlock Text="Wafer ID" Margin="4" FontSize="20"
                                VerticalAlignment="Center" TextAlignment="Center" Foreground="Black"
                                Background="White" FontWeight="Bold" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" x:Name="gridSlot" ShowGridLines="True">
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{StaticResource ButtonStyle1}" Content="Run"
                        IsDefault="True" Click="Button_Click" Margin="12" />
                <Button Grid.Column="1" Style="{StaticResource ButtonStyle1}" Content="Cancel"
                        IsCancel="True" Click="Button_Click_1" Margin="12" />
            </Grid>
        </Grid>
    </Grid>
</Window>

    