<Window x:Class="Root_WIND2.SettingDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Root_WIND2"
        xmlns:PackIcon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:wpg="clr-namespace:System.Windows.Controls"
        xmlns:icons="clr-namespace:Root_WIND2.Icons"
        mc:Ignorable="d"
        Height="450" Width="600" ResizeMode="NoResize" WindowStyle="None" BorderThickness="2" BorderBrush="Black">
    <Window.Resources>
        <!-- #region [Color Dedines] -->
        <SolidColorBrush x:Key="SelectedColor" Color="LightCyan"/>
        <SolidColorBrush x:Key="SelectionActiveColor" Color="LightGray"/>

        <!-- #endregion -->

        <Style TargetType="TreeView">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="0, 5, 0, 0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        </Style>



        <Style x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="IsChecked" Value="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="ExpanderGrid" Background="Transparent">
                            <PackIcon:PackIconMaterial x:Name ="Collapsed"
                                                       Focusable="True"
                                                       Kind="ArrowRightDropCircleOutline"
                                                       HorizontalAlignment="Center"
                                                       Foreground="DarkSlateGray"/>
                            <PackIcon:PackIconMaterial x:Name ="CollapsedMouseOver"
                                                       Focusable="True"
                                                       Kind="ArrowRightDropCircle"
                                                       HorizontalAlignment="Center"
                                                       Foreground="DarkSlateGray"
                                                       Visibility="Hidden"/>
                            <PackIcon:PackIconMaterial x:Name ="Expanded"
                                                       Focusable="True"
                                                       Kind="ArrowDownDropCircleOutline" 
                                                       HorizontalAlignment="Center"
                                                       Foreground="DarkSlateGray"
                                                       Visibility="Hidden"/>
                            <PackIcon:PackIconMaterial x:Name ="ExpandedMouseOver"
                                                       Focusable="True"
                                                       Kind="ArrowDownDropCircle" 
                                                       HorizontalAlignment="Center"
                                                       Foreground="DarkSlateGray"
                                                       Visibility="Hidden"/>
                            <!--<PackIcon:PackIconMaterial x:Name ="None"
                                                       Kind="MinusCircleOutline" 
                                                       HorizontalAlignment="Center"
                                                       Foreground="LightGray"
                                                       Visibility="Hidden"/>-->
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                                         Value="False">
                                <Setter TargetName="None" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Collapsed" Property="Visibility" Value="Hidden"/>
                            </DataTrigger>-->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Collapsed" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="Expanded" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Collapsed" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="CollapsedMouseOver" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Expanded" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="ExpandedMouseOver" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding Path=HorizontalContentAlignment,
                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding Path=VerticalContentAlignment,
                    RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <ControlTemplate.Resources>
                            <local:IndentConverter  Length="19" x:Key="IndentConverter"/>
                        </ControlTemplate.Resources>
                        <StackPanel Orientation="Vertical" Background="Transparent">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid Margin="{Binding Converter={StaticResource IndentConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander"
                                                  ClickMode="Press"
                                                  Style="{StaticResource ExpanderToggleButton}"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <ContentPresenter x:Name="PART_Header"
                                                      Grid.Column="1"
                                                      ContentSource="Header"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="false">
                                <Setter TargetName="ItemsHost" 
                                        Property="Visibility"
                                        Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems"
                                     Value="False">
                                <Setter TargetName="Expander"
                                        Property="Visibility"
                                        Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" 
                                        Property="MinWidth" Value="19" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header"
                                        Property="MinHeight"
                                        Value="19" />
                            </MultiTrigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="Bd"
                                        Property="Panel.Background"
                                        Value="{StaticResource SelectedColor}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd"
                                        Property="Panel.Background"
                                        Value="{StaticResource SelectionActiveColor}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--Title Bar Start-->
        <Grid Grid.Row="0"
              Name="TitleBar"   
              Background="{StaticResource MainThema}"
              MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <icons:AtiLogo Width="30"
                           Height="18"
                           VerticalAlignment="Center"
                           Margin="3" />
            <TextBlock Text="WIND2 - Setting"
                       Foreground="White"
                       VerticalAlignment="Center"
                       FontSize="15"
                       Margin="5,0,0,0"
                       Grid.Column="1" />
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="True"
                        Orientation="Horizontal"
                        Grid.Column="2">
                <Button Style="{StaticResource SystemButton}"
                        x:Name="CloseButton"
                        Width="34"
                        Height="26"
                        Margin="0,0,10,-1"
                        Foreground="White"
                        Command="{Binding CmdClose}"
                        VerticalAlignment="Center" >
                    <Path Style="{StaticResource CloseIconKey}" />
                </Button>
            </StackPanel>
        </Grid>

        <Grid Background="{StaticResource PanelBackGround}" Grid.Row="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0">
                <TextBlock Text="Menu" FontSize="15" VerticalAlignment="Center" Margin="9"/>
            </Border>
            <Border Grid.Column="0"
                Grid.Row="1"
                Margin="4"
                BorderThickness="1"
                BorderBrush="Black">
                <TreeView x:Name="MenuTreeView" ItemsSource="{Binding MenuItems}">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">

                            <TextBlock Text="{Binding Name}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction
                            Command="{Binding SelectedItemCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource self}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TreeView>
            </Border>
            <Border Grid.Column="1"
                Grid.Row="0"
                Grid.RowSpan="2">
                <wpg:WpfPropertyGrid SelectedObject="{Binding SelectedSettingData, Mode=TwoWay, FallbackValue=null}"
                                 TitleVisible="True"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 HelpVisible="True"
                                 ToolbarVisible="False"
                                 PropertySort="Categorized"/>
            </Border>
            <StackPanel Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
                <Button Width="100" Content="확인" Margin="4" Command="{Binding btnOKCommand}"/>
                <Button Width="100" Content="취소" Margin="4" Command="{Binding btnCancelCommand}"/>

            </StackPanel>
        </Grid>
    </Grid>
</Window>
