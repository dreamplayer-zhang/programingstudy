<UserControl x:Class="Root_WIND2.MotionController"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Root_WIND2"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">
    <UserControl.Resources>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

        <Style x:Key="button_selectmode" TargetType="Button">
            <Setter Property="Background" Value="#333366"/>
            <Setter Property="Foreground" Value="{StaticResource groupbox_button_text}"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0" 
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                CornerRadius="6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource sidetap_parent_menu_text}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <ContentPresenter  VerticalAlignment="Center"
                                               HorizontalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource groupbox_button_mouseover}"/>
                            </Trigger>
                            <Trigger  Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource groupbox_button_press}"/>
                                <Setter Property="Foreground" Value="{StaticResource groupbox_button_press_text}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="button_selectmode_circle" TargetType="Button">
            <Setter Property="Background" Value="#333366"/>
            <Setter Property="Foreground" Value="{StaticResource groupbox_button_text}"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0" 
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                CornerRadius="100"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource sidetap_parent_menu_text}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <ContentPresenter  VerticalAlignment="Center"
                                               HorizontalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource groupbox_button_mouseover}"/>
                            </Trigger>
                            <Trigger  Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource groupbox_button_press}"/>
                                <Setter Property="Foreground" Value="{StaticResource groupbox_button_press_text}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="auto_checkbox_button" TargetType="CheckBox">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bd" CornerRadius="6">
                            <TextBlock x:Name="tb" Text="USE" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#333366"/>
                                <Setter TargetName="tb" Property="Text" Value="Manual"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource groupbox_button_normal}"/>
                                <Setter TargetName="tb" Property="Text" Value="Auto"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource groupbox_button_mouseover}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="fast_checkbox_button" TargetType="CheckBox">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
            <Setter Property="Width" Value="68"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bd" CornerRadius="6">
                            <TextBlock x:Name="tb" Text="USE" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#666699"/>
                                <Setter TargetName="tb" Property="Text" Value="Fast"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="bd" Property="Background" Value="#555588"/>
                                <Setter TargetName="tb" Property="Text" Value="Slow"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource groupbox_button_mouseover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Background" Value="#333366"/>
                                <Setter TargetName="tb" Property="Text" Value="-"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <GroupBox Header="Motion Controller"
                  Style="{StaticResource main_view_groupbox}"
                  Margin="4">
            <Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                VerticalAlignment="Stretch"
                                Orientation="Horizontal">
                        <TextBlock Text="XY/Th" Padding="4,0,0,0" Margin="4" Style="{StaticResource group_box_item_name_text}"></TextBlock>
                        <TextBox Width="80" Text="{Binding ManualSpeed}" TextAlignment="Right" Padding="0,0,4,0" VerticalContentAlignment="Center" Margin="4" Height="26" IsEnabled="{Binding ElementName=xy_auto, Path=IsChecked}" PreviewKeyDown="TextBox_PreviewKeyDown" />
                        <CheckBox x:Name="xy_auto" Margin="4" IsChecked="{Binding IsManual}" Style="{StaticResource auto_checkbox_button}"/>
                        <CheckBox x:Name="xy_fast" Margin="4" Style="{StaticResource fast_checkbox_button}" IsChecked="{Binding IsFast}" IsEnabled="{Binding ElementName=xy_auto, Path=IsChecked, Converter={StaticResource InverseBooleanConverter}}"/>

                    </StackPanel>
                    <Border Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" BorderBrush="White" BorderThickness="1"/>
                    <StackPanel Grid.Row="0"
                                Grid.Column="4"
                                Orientation="Horizontal">
                        <TextBlock Text="Z" Margin="4" Style="{StaticResource group_box_item_name_text}"></TextBlock>
                        <TextBox Width="64" Text="{Binding AxisZSpeed}" TextAlignment="Right" Padding="0,0,4,0" VerticalContentAlignment="Center" Margin="4" Height="26" PreviewKeyDown="TextBox_PreviewKeyDown"/>
                    </StackPanel>

                    <Border Grid.Row="1" Grid.Column="4" Grid.RowSpan="2" BorderBrush="White" BorderThickness="1"/>
                    <Button Grid.Row="1" Grid.Column="1" Margin="3" 
                            FontSize="30" Content="▲"
                            Style="{StaticResource button_selectmode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisYMoveUp}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdYStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="0" Margin="3" 
                            FontSize="30" Content="◀"
                            Style="{StaticResource button_selectmode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisXMoveLeft}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdXStop}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="1" Margin="3" 
                            FontSize="30" Content="▼"
                            Style="{StaticResource button_selectmode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisYMoveDown}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdYStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="2" 
                            FontSize="30" Content="▶"
                            Margin="3" Style="{StaticResource button_selectmode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisXMoveRight}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdXStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="4" Margin="3" 
                            FontSize="30" Content="▲"
                            Style="{StaticResource button_selectmode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisZMoveUp}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdZStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="4" Margin="3" 
                            FontSize="30" Content="▼"
                            Style="{StaticResource button_selectmode}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisZMoveDown}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdZStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <!-- Theta -->
                    <Button Grid.Row="1" Grid.Column="0" Margin="3"
                            Style="{StaticResource button_selectmode_circle}">
                        <icon:PackIconMaterial Kind="Autorenew"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Width="45"
                                               Height="45"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisThetaMoveUp}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdThetaStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>


                    <Button Name="BtnRotateClockwise" Grid.Row="1" Grid.Column="2" Margin="3" 
                            Style="{StaticResource button_selectmode_circle}">
                        <icon:PackIconMaterial Kind="Autorenew"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Width="45"
                                               Height="45"
                                               Flip="Horizontal"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding CmdAxisThetaMoveDown}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding CmdThetaStop}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
