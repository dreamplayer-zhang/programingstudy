<UserControl x:Class="Root_Vega._4_Viewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:tools="clr-namespace:RootTools;assembly=RootTools"            
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:obs="clr-namespace:nsSizeObserver;assembly=RootTools"
             xmlns:mouse="clr-namespace:mousebehavior;assembly=RootTools"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d"
             d:DesignHeight="756"
             d:DesignWidth="1876"
             Background="#FF2D2D30">
    <UserControl.Resources>
        <Style x:Key="NoneGridColumn" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>

        <SolidColorBrush x:Key="BorderBrush" Color="Gray" />
        <SolidColorBrush x:Key="BackGround" Color="#FF2D2D30" />

        <SolidColorBrush x:Key="BdrBackGround" Color="White"/>
        <SolidColorBrush x:Key="BdrTitleBackGround" Color="#FF43437A"/>
        <SolidColorBrush x:Key="TbForeGround" Color="White"/>
        <SolidColorBrush x:Key="TbBackGround" Color="#FF919191"/>

        <SolidColorBrush x:Key="TabBorderBrush" Color="Gray"/>
        <SolidColorBrush x:Key="TabBackGround" Color="#FF222223"/>
        <SolidColorBrush x:Key="TabSelected" Color="#FF43437A" />
        <SolidColorBrush x:Key="TabMouseOver" Color="#FF3E3E40"/>
        <SolidColorBrush x:Key="TabForeGround" Color="White" />

        <SolidColorBrush x:Key="BtnBorderBrush" Color="Gray" />
        <SolidColorBrush x:Key="BtnBackGround" Color="#FF222223" />
        <SolidColorBrush x:Key="BtnMouseOver" Color="#FF3E3E40" />
        <SolidColorBrush x:Key="BtnPressed" Color="#FF43437A" />
        <SolidColorBrush x:Key="BtnForeGround" Color="White" />

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontFamily"
                    Value="Arial" />
            <Setter Property="TextBlock.Foreground"
                    Value="{StaticResource TbForeGround}" />
            <Setter Property="TextBlock.VerticalAlignment"
                    Value="Center" />
            <Setter Property="TextBlock.TextAlignment"
                    Value="Center" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{StaticResource BtnBorderBrush}"
                                Background="{StaticResource BtnBackGround}"
                                x:Name="Bdr">
                            <TextBlock FontSize="15"
                                       Foreground="{StaticResource BtnForeGround}"
                                       FontFamily="Arial"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center">
                                <ContentPresenter Margin="10" />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Bdr"
                                        Property="Background"
                                        Value="{StaticResource ResourceKey=BtnMouseOver}"/>
                                <Setter Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed"
                                     Value="True">
                                <Setter TargetName="Bdr"
                                        Property="Background"
                                        Value="{StaticResource ResourceKey=BtnPressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton"
               x:Key="MyToggle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="0"
                                Background="{StaticResource BtnBackGround}"
                                BorderBrush="{StaticResource BtnBorderBrush}"
                                BorderThickness="0"
                                x:Name="Bdr">
                            <TextBlock FontSize="15"
                                       FontFamily="Arial"
                                       Foreground="{StaticResource BtnForeGround}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center">
                                <ContentPresenter Margin="10" /></TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver"
                                     Value="True">
                                <!--#FF3E3E40-->
                                <Setter TargetName="Bdr"
                                        Property="Background"
                                        Value="{StaticResource ResourceKey=BtnMouseOver}" />
                                <Setter Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="Bdr"
                                        Property="Background"
                                        Value="{StaticResource ResourceKey=BtnPressed}" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="False">
                                <Setter TargetName="Bdr"
                                        Property="Background"
                                        Value="{StaticResource ResourceKey=BtnBackGround}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="87*" />
            <ColumnDefinition Width="13*" />
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0"
                Margin="15"
                BorderBrush="Gray"
                BorderThickness="3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*" />
                    <ColumnDefinition Width="80*" />
                    <ColumnDefinition Width="10*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0"
                      Margin="15,15,0,15">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Background="{StaticResource BdrTitleBackGround}"
                                BorderBrush="Gray"
                                BorderThickness="3,3,3,3">
                            <TextBlock Text="Pool ID"
                                       FontSize="13" />
                        </Border>
                        <Border Grid.Row="1"
                                BorderBrush="Gray"
                                BorderThickness="3,0,3,3"
                                DataContext="{Binding p_MemoryModule}">
                            <ListBox HorizontalContentAlignment="Stretch"
                                     Background="{PriorityBinding}"
                                     SelectedItem="{Binding Path = DataContext.p_SelectedMemPool, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                     ItemsSource="{Binding p_aPool}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel></StackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Black"
                                                BorderThickness="1"
                                                x:Name="ItemBorder2"
                                                HorizontalAlignment="Stretch">
                                            <Label Content="{Binding p_id}"
                                                   FontSize="14"
                                                   FontWeight="Bold"
                                                   Foreground="White"
                                                   HorizontalAlignment="Stretch"
                                                   HorizontalContentAlignment="Center"
                                                   VerticalAlignment="Stretch"></Label>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="true">
                                                <Setter TargetName="ItemBorder2"
                                                        Property="Background"
                                                        Value="#FF3E3E40"></Setter>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                                         Value="True">
                                                <Setter TargetName="ItemBorder2"
                                                        Property="Background"
                                                        Value="#FF43437A"></Setter>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <!--<ListView Background="{PriorityBinding}"
                                      ItemsSource="{Binding p_aPool, Mode=TwoWay}"
                                      SelectedItem="{Binding Path = DataContext.p_SelectedMemPool, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                --><!--<ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                                <Style.Triggers>
                                                    <Trigger Property=" IsSelected"></Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn   DisplayMemberBinding="{Binding p_id}"></GridViewColumn>
                                    </GridView>
                                </ListView.View>--><!--
                            </ListView>-->
                        </Border>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Background="#FF007ACC"
                                BorderBrush="Gray"
                                BorderThickness="3,0,3,3">
                            <TextBlock Text="Group ID"
                                       FontSize="13" />
                        </Border>
                        <Border Grid.Row="1"
                                BorderBrush="Gray"
                                BorderThickness="3,0,3,3"
                                DataContext="{Binding p_SelectedMemPool, Mode=TwoWay}">
                            <ListBox HorizontalContentAlignment="Stretch"
                                     Background="{PriorityBinding}"
                                     SelectedItem="{Binding Path = DataContext.p_SelectedMemGroup, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                     ItemsSource="{Binding p_aGroup}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel></StackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Black"
                                                BorderThickness="1"
                                                x:Name="ItemBorder2"
                                                HorizontalAlignment="Stretch">
                                            <Label Content="{Binding p_id}"
                                                   FontSize="14"
                                                   FontWeight="Bold"
                                                   Foreground="White"
                                                   HorizontalAlignment="Stretch"
                                                   HorizontalContentAlignment="Center"
                                                   VerticalAlignment="Stretch"></Label>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="true">
                                                <Setter TargetName="ItemBorder2"
                                                        Property="Background"
                                                        Value="#FF3E3E40"></Setter>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                                         Value="True">
                                                <Setter TargetName="ItemBorder2"
                                                        Property="Background"
                                                        Value="#FF43437A"></Setter>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <!--<ListView Background="{PriorityBinding}"
                                      Grid.Row="1"
                                      ItemsSource="{Binding p_aGroup, Mode=TwoWay}"
                                      SelectedItem="{Binding Path = DataContext.p_SelectedMemGroup, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn  DisplayMemberBinding="{Binding p_id}"></GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>-->
                        </Border>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Background="#FF007ACC"
                                BorderBrush="Gray"
                                BorderThickness="3,0,3,3">
                            <TextBlock Text="Memory ID"
                                       FontSize="13" />
                        </Border>
                        <Border Grid.Row="1"
                                BorderBrush="Gray"
                                BorderThickness="3,0,3,3"
                                DataContext="{Binding p_SelectedMemGroup, Mode=TwoWay}">
                            <ListBox HorizontalContentAlignment="Stretch"
                                     Background="{PriorityBinding}"
                                     SelectedItem="{Binding Path = DataContext.p_SelectedMemData, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                     ItemsSource="{Binding p_aMemory}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding Path = DataContext.CommandMemorySelect, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel></StackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="Black"
                                                BorderThickness="1"
                                                x:Name="ItemBorder2"
                                                HorizontalAlignment="Stretch">
                                            <Label Content="{Binding p_id}"
                                                   FontSize="14"
                                                   FontWeight="Bold"
                                                   Foreground="White"
                                                   HorizontalAlignment="Stretch"
                                                   HorizontalContentAlignment="Center"
                                                   VerticalAlignment="Stretch"></Label>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="true">
                                                <Setter TargetName="ItemBorder2"
                                                        Property="Background"
                                                        Value="#FF3E3E40"></Setter>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                                         Value="True">
                                                <Setter TargetName="ItemBorder2"
                                                        Property="Background"
                                                        Value="#FF43437A"></Setter>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <!--<ListView Background="{PriorityBinding}"
                                      Grid.Row="1"
                                      ItemsSource="{Binding p_aMemory, Mode=TwoWay}"
                                      SelectedItem="{Binding Path = DataContext.p_SelectedMemData, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command= "{Binding Path = DataContext.CommandMemorySelect, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn   DisplayMemberBinding="{Binding p_id}"></GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>-->
                        </Border>
                    </Grid>
                </Grid>
                <Grid Grid.Column="1"
                      Margin="15"
                      Background="Black">
                    <tools:ImageViewer DataContext="{Binding p_ImageViewer}"
                                       Width="{PriorityBinding}"
                                       Height="{PriorityBinding}" />
                </Grid>
                <Grid Grid.Column="2"
                      Margin="0,15,15,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200" ></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Canvas Grid.Row="0"
                            Focusable="True"
                            obs:SizeObserver.Observe="true"
                            obs:SizeObserver.ObservedWidth="{Binding p_ImageViewer.p_ThumbWidth, Mode=OneWayToSource}"
                            obs:SizeObserver.ObservedHeight="{Binding p_ImageViewer.p_ThumbHeight, Mode=OneWayToSource}"
                            Background="Black">           
                        <Image Source="{Binding Path= p_ImageViewer.p_ThumNailImgSource}" />
                        <Rectangle Margin="{Binding Path = p_ImageViewer.p_TumbnailImgMargin}"
                                   Width="{Binding p_ImageViewer.p_TumbnailImg_Rect.Width}"
                                   Height="{Binding p_ImageViewer.p_TumbnailImg_Rect.Height}"
                                   Stroke="Blue"
                                   StrokeThickness="4" />
                        <i:Interaction.Behaviors>
                            <mouse:MouseBehaviour MouseEvent="{Binding MouseEvent, Mode=OneWayToSource}" />
                            <mouse:MouseBehaviour MouseX="{Binding p_ImageViewer.p_TumbMouseX, Mode=OneWayToSource}"
                                                  MouseY="{Binding p_ImageViewer.p_TumbMouseY, Mode=OneWayToSource}" />
                        </i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseLeftDown}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseMove}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseLeave}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding p_ImageViewer.TumbNailMouseLeftUp}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Canvas>
                </Grid>
            </Grid>
        </Border>
        <StackPanel Grid.Column="1"
                    Margin="0,45,15,15">
            <Button Content="Image Load"
                    Margin="0,0,0,10"
                    Command="{Binding p_ImageViewer.btnClickOpenImage}" />
            <Button Content="Image Save"
                    Command="{Binding p_ImageViewer.btnClickSaveImage}" />
            <Button Content="Image Clear" 
                    Margin="0,0,0,10"
                    Command="{Binding p_ImageViewer.CommandImageClear}"/>
            <Button Content="Home"
                    Margin="0,0,0,10"
                    Command="{Binding CommandVisionHome}" />
            <Button Content="Scan"
                    Margin="0,0,0,10"
                    Command="{Binding CommandScan}" />
            <Button Content="Inspection"
                    Margin="0,0,0,10"
                    Command="{Binding CommandInspection}" />
            <Button Content="Stop"
                    Margin="0,0,0,10"
                    Command="{Binding CommandStop}" />
            <Button Content="Manual Align"
                    Margin="0,0,0,10"
                    Command="{Binding CommandManualAlign}"/>
            <Button Content="Test"
                    Margin="0,0,0,10"
                    Command="{Binding CommandTest}" />
        </StackPanel>
    </Grid>
</UserControl>
